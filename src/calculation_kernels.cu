template <typename T>
__device__ __forceinline__ void wNorm2WinoCalculation(T *input_patch, T* output_patch, int D, int H, int W) {
    if(D == 1 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0];
        output_patch[3] = input_patch[0];
        output_patch[4] = input_patch[0];
        output_patch[5] = input_patch[0];
        output_patch[6] = input_patch[0];
        output_patch[7] = input_patch[0];
    } else if(D == 1 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0];
        output_patch[4] = input_patch[0] + input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = input_patch[0];
        output_patch[7] = input_patch[0] + input_patch[1];
        output_patch[8] = input_patch[1];
        output_patch[9] = input_patch[0];
        output_patch[10] = input_patch[0] + input_patch[1];
        output_patch[11] = input_patch[1];
    } else if(D == 1 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[7] = input_patch[2];
        output_patch[8] = input_patch[0];
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[10] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[11] = input_patch[2];
        output_patch[12] = input_patch[0];
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[14] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[15] = input_patch[2];
    } else if(D == 1 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0] + input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[1];
        output_patch[4] = input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = input_patch[0];
        output_patch[7] = input_patch[0];
        output_patch[8] = input_patch[0] + input_patch[1];
        output_patch[9] = input_patch[0] + input_patch[1];
        output_patch[10] = input_patch[1];
        output_patch[11] = input_patch[1];
    } else if(D == 1 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[5] = input_patch[1] + input_patch[3];
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2] + input_patch[3];
        output_patch[8] = input_patch[3];
        output_patch[9] = input_patch[0];
        output_patch[10] = input_patch[0] + input_patch[1];
        output_patch[11] = input_patch[1];
        output_patch[12] = input_patch[0] + input_patch[2];
        output_patch[13] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[14] = input_patch[1] + input_patch[3];
        output_patch[15] = input_patch[2];
        output_patch[16] = input_patch[2] + input_patch[3];
        output_patch[17] = input_patch[3];
    } else if(D == 1 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[3];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[7] = input_patch[2] + input_patch[5];
        output_patch[8] = input_patch[3];
        output_patch[9] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[10] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[11] = input_patch[5];
        output_patch[12] = input_patch[0];
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[14] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[15] = input_patch[2];
        output_patch[16] = input_patch[0] + input_patch[3];
        output_patch[17] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[19] = input_patch[2] + input_patch[5];
        output_patch[20] = input_patch[3];
        output_patch[21] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[22] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[23] = input_patch[5];
    } else if(D == 1 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[4] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[5] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2];
        output_patch[8] = input_patch[0];
        output_patch[9] = input_patch[0];
        output_patch[10] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[11] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[12] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[13] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[14] = input_patch[2];
        output_patch[15] = input_patch[2];
    } else if(D == 1 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[5] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[8] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[9] = input_patch[4];
        output_patch[10] = input_patch[4] + input_patch[5];
        output_patch[11] = input_patch[5];
        output_patch[12] = input_patch[0];
        output_patch[13] = input_patch[0] + input_patch[1];
        output_patch[14] = input_patch[1];
        output_patch[15] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[16] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[17] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[19] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[20] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[21] = input_patch[4];
        output_patch[22] = input_patch[4] + input_patch[5];
        output_patch[23] = input_patch[5];
    } else if(D == 1 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[5] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[6] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[7] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[8] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[9] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[10] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[11] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[12] = input_patch[6];
        output_patch[13] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = input_patch[8];
        output_patch[16] = input_patch[0];
        output_patch[17] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[19] = input_patch[2];
        output_patch[20] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[21] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[22] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[23] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[24] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[25] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[26] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[27] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[28] = input_patch[6];
        output_patch[29] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[30] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[31] = input_patch[8];
    } else if(D == 2 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0];
        output_patch[3] = input_patch[0];
        output_patch[4] = input_patch[0] + input_patch[1];
        output_patch[5] = input_patch[0] + input_patch[1];
        output_patch[6] = input_patch[0] + input_patch[1];
        output_patch[7] = input_patch[0] + input_patch[1];
        output_patch[8] = input_patch[1];
        output_patch[9] = input_patch[1];
        output_patch[10] = input_patch[1];
        output_patch[11] = input_patch[1];
    } else if(D == 2 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0];
        output_patch[4] = input_patch[0] + input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = input_patch[0] + input_patch[2];
        output_patch[7] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[8] = input_patch[1] + input_patch[3];
        output_patch[9] = input_patch[0] + input_patch[2];
        output_patch[10] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[11] = input_patch[1] + input_patch[3];
        output_patch[12] = input_patch[2];
        output_patch[13] = input_patch[2] + input_patch[3];
        output_patch[14] = input_patch[3];
        output_patch[15] = input_patch[2];
        output_patch[16] = input_patch[2] + input_patch[3];
        output_patch[17] = input_patch[3];
    } else if(D == 2 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[7] = input_patch[2];
        output_patch[8] = input_patch[0] + input_patch[3];
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[10] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[11] = input_patch[2] + input_patch[5];
        output_patch[12] = input_patch[0] + input_patch[3];
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[14] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[15] = input_patch[2] + input_patch[5];
        output_patch[16] = input_patch[3];
        output_patch[17] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[18] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[19] = input_patch[5];
        output_patch[20] = input_patch[3];
        output_patch[21] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[22] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[23] = input_patch[5];
    } else if(D == 2 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0] + input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[1];
        output_patch[4] = input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = input_patch[0] + input_patch[2];
        output_patch[7] = input_patch[0] + input_patch[2];
        output_patch[8] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[9] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[10] = input_patch[1] + input_patch[3];
        output_patch[11] = input_patch[1] + input_patch[3];
        output_patch[12] = input_patch[2];
        output_patch[13] = input_patch[2];
        output_patch[14] = input_patch[2] + input_patch[3];
        output_patch[15] = input_patch[2] + input_patch[3];
        output_patch[16] = input_patch[3];
        output_patch[17] = input_patch[3];
    } else if(D == 2 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[5] = input_patch[1] + input_patch[3];
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2] + input_patch[3];
        output_patch[8] = input_patch[3];
        output_patch[9] = input_patch[0] + input_patch[4];
        output_patch[10] = input_patch[0] + input_patch[1] + input_patch[4] + input_patch[5];
        output_patch[11] = input_patch[1] + input_patch[5];
        output_patch[12] = input_patch[0] + input_patch[2] + input_patch[4] + input_patch[6];
        output_patch[13] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7];
        output_patch[14] = input_patch[1] + input_patch[3] + input_patch[5] + input_patch[7];
        output_patch[15] = input_patch[2] + input_patch[6];
        output_patch[16] = input_patch[2] + input_patch[3] + input_patch[6] + input_patch[7];
        output_patch[17] = input_patch[3] + input_patch[7];
        output_patch[18] = input_patch[4];
        output_patch[19] = input_patch[4] + input_patch[5];
        output_patch[20] = input_patch[5];
        output_patch[21] = input_patch[4] + input_patch[6];
        output_patch[22] = input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7];
        output_patch[23] = input_patch[5] + input_patch[7];
        output_patch[24] = input_patch[6];
        output_patch[25] = input_patch[6] + input_patch[7];
        output_patch[26] = input_patch[7];
    } else if(D == 2 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[3];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[7] = input_patch[2] + input_patch[5];
        output_patch[8] = input_patch[3];
        output_patch[9] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[10] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[11] = input_patch[5];
        output_patch[12] = input_patch[0] + input_patch[6];
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = input_patch[2] + input_patch[8];
        output_patch[16] = input_patch[0] + input_patch[3] + input_patch[6] + input_patch[9];
        output_patch[17] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[10] + input_patch[11] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[19] = input_patch[11] + input_patch[2] + input_patch[5] + input_patch[8];
        output_patch[20] = input_patch[3] + input_patch[9];
        output_patch[21] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[9]);
        output_patch[22] = T(1/2.)*(-input_patch[10] + input_patch[11] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[9]);
        output_patch[23] = input_patch[11] + input_patch[5];
        output_patch[24] = input_patch[6];
        output_patch[25] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[26] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[27] = input_patch[8];
        output_patch[28] = input_patch[6] + input_patch[9];
        output_patch[29] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[30] = T(1/2.)*(-input_patch[10] + input_patch[11] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[31] = input_patch[11] + input_patch[8];
        output_patch[32] = input_patch[9];
        output_patch[33] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[9]);
        output_patch[34] = T(1/2.)*(-input_patch[10] + input_patch[11] + input_patch[9]);
        output_patch[35] = input_patch[11];
    } else if(D == 2 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[4] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[5] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2];
        output_patch[8] = input_patch[0] + input_patch[3];
        output_patch[9] = input_patch[0] + input_patch[3];
        output_patch[10] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[11] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[12] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[13] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[14] = input_patch[2] + input_patch[5];
        output_patch[15] = input_patch[2] + input_patch[5];
        output_patch[16] = input_patch[3];
        output_patch[17] = input_patch[3];
        output_patch[18] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[19] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[20] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[21] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[22] = input_patch[5];
        output_patch[23] = input_patch[5];
    } else if(D == 2 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[5] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[8] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[9] = input_patch[4];
        output_patch[10] = input_patch[4] + input_patch[5];
        output_patch[11] = input_patch[5];
        output_patch[12] = input_patch[0] + input_patch[6];
        output_patch[13] = input_patch[0] + input_patch[1] + input_patch[6] + input_patch[7];
        output_patch[14] = input_patch[1] + input_patch[7];
        output_patch[15] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[2] + input_patch[4] + input_patch[6] + input_patch[8]);
        output_patch[16] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[17] = T(1/2.)*(input_patch[11] + input_patch[1] + input_patch[3] + input_patch[5] + input_patch[7] + input_patch[9]);
        output_patch[18] = T(1/2.)*(input_patch[0] + input_patch[10] - input_patch[2] + input_patch[4] + input_patch[6] - input_patch[8]);
        output_patch[19] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[20] = T(1/2.)*(input_patch[11] + input_patch[1] - input_patch[3] + input_patch[5] + input_patch[7] - input_patch[9]);
        output_patch[21] = input_patch[10] + input_patch[4];
        output_patch[22] = input_patch[10] + input_patch[11] + input_patch[4] + input_patch[5];
        output_patch[23] = input_patch[11] + input_patch[5];
        output_patch[24] = input_patch[6];
        output_patch[25] = input_patch[6] + input_patch[7];
        output_patch[26] = input_patch[7];
        output_patch[27] = T(1/2.)*(input_patch[10] + input_patch[6] + input_patch[8]);
        output_patch[28] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[29] = T(1/2.)*(input_patch[11] + input_patch[7] + input_patch[9]);
        output_patch[30] = T(1/2.)*(input_patch[10] + input_patch[6] - input_patch[8]);
        output_patch[31] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[6] + input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[32] = T(1/2.)*(input_patch[11] + input_patch[7] - input_patch[9]);
        output_patch[33] = input_patch[10];
        output_patch[34] = input_patch[10] + input_patch[11];
        output_patch[35] = input_patch[11];
    } else if(D == 2 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[5] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[6] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[7] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[8] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[9] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[10] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[11] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[12] = input_patch[6];
        output_patch[13] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = input_patch[8];
        output_patch[16] = input_patch[0] + input_patch[9];
        output_patch[17] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] + input_patch[2] + input_patch[9]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[10] + input_patch[11] - input_patch[1] + input_patch[2] + input_patch[9]);
        output_patch[19] = input_patch[11] + input_patch[2];
        output_patch[20] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[15] + input_patch[3] + input_patch[6] + input_patch[9]);
        output_patch[21] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[22] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[23] = T(1/2.)*(input_patch[11] + input_patch[14] + input_patch[17] + input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[24] = T(1/2.)*(input_patch[0] - input_patch[12] + input_patch[15] - input_patch[3] + input_patch[6] + input_patch[9]);
        output_patch[25] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[26] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[11] - input_patch[12] + input_patch[13] - input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[27] = T(1/2.)*(input_patch[11] - input_patch[14] + input_patch[17] + input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[28] = input_patch[15] + input_patch[6];
        output_patch[29] = T(1/2.)*(input_patch[15] + input_patch[16] + input_patch[17] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[30] = T(1/2.)*(input_patch[15] - input_patch[16] + input_patch[17] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[31] = input_patch[17] + input_patch[8];
        output_patch[32] = input_patch[9];
        output_patch[33] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[9]);
        output_patch[34] = T(1/2.)*(-input_patch[10] + input_patch[11] + input_patch[9]);
        output_patch[35] = input_patch[11];
        output_patch[36] = T(1/2.)*(input_patch[12] + input_patch[15] + input_patch[9]);
        output_patch[37] = T(1/4.)*(input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[9]);
        output_patch[38] = T(1/4.)*(-input_patch[10] + input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[9]);
        output_patch[39] = T(1/2.)*(input_patch[11] + input_patch[14] + input_patch[17]);
        output_patch[40] = T(1/2.)*(-input_patch[12] + input_patch[15] + input_patch[9]);
        output_patch[41] = T(1/4.)*(input_patch[10] + input_patch[11] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[9]);
        output_patch[42] = T(1/4.)*(-input_patch[10] + input_patch[11] - input_patch[12] + input_patch[13] - input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[9]);
        output_patch[43] = T(1/2.)*(input_patch[11] - input_patch[14] + input_patch[17]);
        output_patch[44] = input_patch[15];
        output_patch[45] = T(1/2.)*(input_patch[15] + input_patch[16] + input_patch[17]);
        output_patch[46] = T(1/2.)*(input_patch[15] - input_patch[16] + input_patch[17]);
        output_patch[47] = input_patch[17];
    } else if(D == 3 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0];
        output_patch[3] = input_patch[0];
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[6] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[8] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[9] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[10] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[11] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[12] = input_patch[2];
        output_patch[13] = input_patch[2];
        output_patch[14] = input_patch[2];
        output_patch[15] = input_patch[2];
    } else if(D == 3 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0];
        output_patch[4] = input_patch[0] + input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[8] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[10] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[11] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[12] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[14] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[15] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[16] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[17] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[18] = input_patch[4];
        output_patch[19] = input_patch[4] + input_patch[5];
        output_patch[20] = input_patch[5];
        output_patch[21] = input_patch[4];
        output_patch[22] = input_patch[4] + input_patch[5];
        output_patch[23] = input_patch[5];
    } else if(D == 3 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[7] = input_patch[2];
        output_patch[8] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[9] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[10] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[11] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[12] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[13] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[16] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[17] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[18] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[19] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[20] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[21] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[22] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[23] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[24] = input_patch[6];
        output_patch[25] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[26] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[27] = input_patch[8];
        output_patch[28] = input_patch[6];
        output_patch[29] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[30] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[31] = input_patch[8];
    } else if(D == 3 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = input_patch[0] + input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[1];
        output_patch[4] = input_patch[1];
        output_patch[5] = input_patch[1];
        output_patch[6] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[8] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[10] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[11] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[12] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[13] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[14] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[15] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[16] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[17] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[18] = input_patch[4];
        output_patch[19] = input_patch[4];
        output_patch[20] = input_patch[4] + input_patch[5];
        output_patch[21] = input_patch[4] + input_patch[5];
        output_patch[22] = input_patch[5];
        output_patch[23] = input_patch[5];
    } else if(D == 3 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = input_patch[0] + input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3];
        output_patch[5] = input_patch[1] + input_patch[3];
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2] + input_patch[3];
        output_patch[8] = input_patch[3];
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[4] + input_patch[8]);
        output_patch[10] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[4] + input_patch[5] + input_patch[8] + input_patch[9]);
        output_patch[11] = T(1/2.)*(input_patch[1] + input_patch[5] + input_patch[9]);
        output_patch[12] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[2] + input_patch[4] + input_patch[6] + input_patch[8]);
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[14] = T(1/2.)*(input_patch[11] + input_patch[1] + input_patch[3] + input_patch[5] + input_patch[7] + input_patch[9]);
        output_patch[15] = T(1/2.)*(input_patch[10] + input_patch[2] + input_patch[6]);
        output_patch[16] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[2] + input_patch[3] + input_patch[6] + input_patch[7]);
        output_patch[17] = T(1/2.)*(input_patch[11] + input_patch[3] + input_patch[7]);
        output_patch[18] = T(1/2.)*(input_patch[0] - input_patch[4] + input_patch[8]);
        output_patch[19] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[4] - input_patch[5] + input_patch[8] + input_patch[9]);
        output_patch[20] = T(1/2.)*(input_patch[1] - input_patch[5] + input_patch[9]);
        output_patch[21] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[2] - input_patch[4] - input_patch[6] + input_patch[8]);
        output_patch[22] = T(1/2.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] - input_patch[5] - input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[23] = T(1/2.)*(input_patch[11] + input_patch[1] + input_patch[3] - input_patch[5] - input_patch[7] + input_patch[9]);
        output_patch[24] = T(1/2.)*(input_patch[10] + input_patch[2] - input_patch[6]);
        output_patch[25] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[2] + input_patch[3] - input_patch[6] - input_patch[7]);
        output_patch[26] = T(1/2.)*(input_patch[11] + input_patch[3] - input_patch[7]);
        output_patch[27] = input_patch[8];
        output_patch[28] = input_patch[8] + input_patch[9];
        output_patch[29] = input_patch[9];
        output_patch[30] = input_patch[10] + input_patch[8];
        output_patch[31] = input_patch[10] + input_patch[11] + input_patch[8] + input_patch[9];
        output_patch[32] = input_patch[11] + input_patch[9];
        output_patch[33] = input_patch[10];
        output_patch[34] = input_patch[10] + input_patch[11];
        output_patch[35] = input_patch[11];
    } else if(D == 3 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = input_patch[0] + input_patch[3];
        output_patch[5] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[7] = input_patch[2] + input_patch[5];
        output_patch[8] = input_patch[3];
        output_patch[9] = T(1/2.)*(input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[10] = T(1/2.)*(input_patch[3] - input_patch[4] + input_patch[5]);
        output_patch[11] = input_patch[5];
        output_patch[12] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[6]);
        output_patch[13] = T(1/4.)*(input_patch[0] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[1] + input_patch[2] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/4.)*(input_patch[0] + input_patch[12] - input_patch[13] + input_patch[14] - input_patch[1] + input_patch[2] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = T(1/2.)*(input_patch[14] + input_patch[2] + input_patch[8]);
        output_patch[16] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[15] + input_patch[3] + input_patch[6] + input_patch[9]);
        output_patch[17] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[18] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[19] = T(1/2.)*(input_patch[11] + input_patch[14] + input_patch[17] + input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[20] = T(1/2.)*(input_patch[15] + input_patch[3] + input_patch[9]);
        output_patch[21] = T(1/4.)*(input_patch[10] + input_patch[11] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[9]);
        output_patch[22] = T(1/4.)*(-input_patch[10] + input_patch[11] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[9]);
        output_patch[23] = T(1/2.)*(input_patch[11] + input_patch[17] + input_patch[5]);
        output_patch[24] = T(1/2.)*(input_patch[0] + input_patch[12] - input_patch[6]);
        output_patch[25] = T(1/4.)*(input_patch[0] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[1] + input_patch[2] - input_patch[6] - input_patch[7] - input_patch[8]);
        output_patch[26] = T(1/4.)*(input_patch[0] + input_patch[12] - input_patch[13] + input_patch[14] - input_patch[1] + input_patch[2] - input_patch[6] + input_patch[7] - input_patch[8]);
        output_patch[27] = T(1/2.)*(input_patch[14] + input_patch[2] - input_patch[8]);
        output_patch[28] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[15] + input_patch[3] - input_patch[6] - input_patch[9]);
        output_patch[29] = T(1/4.)*(input_patch[0] - input_patch[10] - input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] - input_patch[6] - input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[30] = T(1/4.)*(input_patch[0] + input_patch[10] - input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] - input_patch[6] + input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[31] = T(1/2.)*(-input_patch[11] + input_patch[14] + input_patch[17] + input_patch[2] + input_patch[5] - input_patch[8]);
        output_patch[32] = T(1/2.)*(input_patch[15] + input_patch[3] - input_patch[9]);
        output_patch[33] = T(1/4.)*(-input_patch[10] - input_patch[11] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[3] + input_patch[4] + input_patch[5] - input_patch[9]);
        output_patch[34] = T(1/4.)*(input_patch[10] - input_patch[11] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[3] - input_patch[4] + input_patch[5] - input_patch[9]);
        output_patch[35] = T(1/2.)*(-input_patch[11] + input_patch[17] + input_patch[5]);
        output_patch[36] = input_patch[12];
        output_patch[37] = T(1/2.)*(input_patch[12] + input_patch[13] + input_patch[14]);
        output_patch[38] = T(1/2.)*(input_patch[12] - input_patch[13] + input_patch[14]);
        output_patch[39] = input_patch[14];
        output_patch[40] = input_patch[12] + input_patch[15];
        output_patch[41] = T(1/2.)*(input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17]);
        output_patch[42] = T(1/2.)*(input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17]);
        output_patch[43] = input_patch[14] + input_patch[17];
        output_patch[44] = input_patch[15];
        output_patch[45] = T(1/2.)*(input_patch[15] + input_patch[16] + input_patch[17]);
        output_patch[46] = T(1/2.)*(input_patch[15] - input_patch[16] + input_patch[17]);
        output_patch[47] = input_patch[17];
    } else if(D == 3 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0];
        output_patch[2] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[4] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[5] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[6] = input_patch[2];
        output_patch[7] = input_patch[2];
        output_patch[8] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[9] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[10] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[11] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[12] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[13] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[15] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[16] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[17] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[18] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[19] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[20] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[21] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[22] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[23] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[24] = input_patch[6];
        output_patch[25] = input_patch[6];
        output_patch[26] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[27] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[28] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[29] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[30] = input_patch[8];
        output_patch[31] = input_patch[8];
    } else if(D == 3 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[0] + input_patch[1];
        output_patch[2] = input_patch[1];
        output_patch[3] = T(1/2.)*(input_patch[0] + input_patch[2] + input_patch[4]);
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[5] = T(1/2.)*(input_patch[1] + input_patch[3] + input_patch[5]);
        output_patch[6] = T(1/2.)*(input_patch[0] - input_patch[2] + input_patch[4]);
        output_patch[7] = T(1/2.)*(input_patch[0] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5]);
        output_patch[8] = T(1/2.)*(input_patch[1] - input_patch[3] + input_patch[5]);
        output_patch[9] = input_patch[4];
        output_patch[10] = input_patch[4] + input_patch[5];
        output_patch[11] = input_patch[5];
        output_patch[12] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[6]);
        output_patch[13] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[13] + input_patch[1] + input_patch[6] + input_patch[7]);
        output_patch[14] = T(1/2.)*(input_patch[13] + input_patch[1] + input_patch[7]);
        output_patch[15] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[12] + input_patch[14] + input_patch[16] + input_patch[2] + input_patch[4] + input_patch[6] + input_patch[8]);
        output_patch[16] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[17] = T(1/4.)*(input_patch[11] + input_patch[13] + input_patch[15] + input_patch[17] + input_patch[1] + input_patch[3] + input_patch[5] + input_patch[7] + input_patch[9]);
        output_patch[18] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[12] - input_patch[14] + input_patch[16] - input_patch[2] + input_patch[4] + input_patch[6] - input_patch[8]);
        output_patch[19] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] - input_patch[14] - input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[20] = T(1/4.)*(input_patch[11] + input_patch[13] - input_patch[15] + input_patch[17] + input_patch[1] - input_patch[3] + input_patch[5] + input_patch[7] - input_patch[9]);
        output_patch[21] = T(1/2.)*(input_patch[10] + input_patch[16] + input_patch[4]);
        output_patch[22] = T(1/2.)*(input_patch[10] + input_patch[11] + input_patch[16] + input_patch[17] + input_patch[4] + input_patch[5]);
        output_patch[23] = T(1/2.)*(input_patch[11] + input_patch[17] + input_patch[5]);
        output_patch[24] = T(1/2.)*(input_patch[0] + input_patch[12] - input_patch[6]);
        output_patch[25] = T(1/2.)*(input_patch[0] + input_patch[12] + input_patch[13] + input_patch[1] - input_patch[6] - input_patch[7]);
        output_patch[26] = T(1/2.)*(input_patch[13] + input_patch[1] - input_patch[7]);
        output_patch[27] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[12] + input_patch[14] + input_patch[16] + input_patch[2] + input_patch[4] - input_patch[6] - input_patch[8]);
        output_patch[28] = T(1/4.)*(input_patch[0] - input_patch[10] - input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] - input_patch[6] - input_patch[7] - input_patch[8] - input_patch[9]);
        output_patch[29] = T(1/4.)*(-input_patch[11] + input_patch[13] + input_patch[15] + input_patch[17] + input_patch[1] + input_patch[3] + input_patch[5] - input_patch[7] - input_patch[9]);
        output_patch[30] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[12] - input_patch[14] + input_patch[16] - input_patch[2] + input_patch[4] - input_patch[6] + input_patch[8]);
        output_patch[31] = T(1/4.)*(input_patch[0] - input_patch[10] - input_patch[11] + input_patch[12] + input_patch[13] - input_patch[14] - input_patch[15] + input_patch[16] + input_patch[17] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[4] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[32] = T(1/4.)*(-input_patch[11] + input_patch[13] - input_patch[15] + input_patch[17] + input_patch[1] - input_patch[3] + input_patch[5] - input_patch[7] + input_patch[9]);
        output_patch[33] = T(1/2.)*(-input_patch[10] + input_patch[16] + input_patch[4]);
        output_patch[34] = T(1/2.)*(-input_patch[10] - input_patch[11] + input_patch[16] + input_patch[17] + input_patch[4] + input_patch[5]);
        output_patch[35] = T(1/2.)*(-input_patch[11] + input_patch[17] + input_patch[5]);
        output_patch[36] = input_patch[12];
        output_patch[37] = input_patch[12] + input_patch[13];
        output_patch[38] = input_patch[13];
        output_patch[39] = T(1/2.)*(input_patch[12] + input_patch[14] + input_patch[16]);
        output_patch[40] = T(1/2.)*(input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17]);
        output_patch[41] = T(1/2.)*(input_patch[13] + input_patch[15] + input_patch[17]);
        output_patch[42] = T(1/2.)*(input_patch[12] - input_patch[14] + input_patch[16]);
        output_patch[43] = T(1/2.)*(input_patch[12] + input_patch[13] - input_patch[14] - input_patch[15] + input_patch[16] + input_patch[17]);
        output_patch[44] = T(1/2.)*(input_patch[13] - input_patch[15] + input_patch[17]);
        output_patch[45] = input_patch[16];
        output_patch[46] = input_patch[16] + input_patch[17];
        output_patch[47] = input_patch[17];
    } else if(D == 3 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0];
        output_patch[1] = T(1/2.)*(input_patch[0] + input_patch[1] + input_patch[2]);
        output_patch[2] = T(1/2.)*(input_patch[0] - input_patch[1] + input_patch[2]);
        output_patch[3] = input_patch[2];
        output_patch[4] = T(1/2.)*(input_patch[0] + input_patch[3] + input_patch[6]);
        output_patch[5] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[6] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[7] = T(1/2.)*(input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[8] = T(1/2.)*(input_patch[0] - input_patch[3] + input_patch[6]);
        output_patch[9] = T(1/4.)*(input_patch[0] + input_patch[1] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[10] = T(1/4.)*(input_patch[0] - input_patch[1] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[11] = T(1/2.)*(input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[12] = input_patch[6];
        output_patch[13] = T(1/2.)*(input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[14] = T(1/2.)*(input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[15] = input_patch[8];
        output_patch[16] = T(1/2.)*(input_patch[0] + input_patch[18] + input_patch[9]);
        output_patch[17] = T(1/4.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[2] + input_patch[9]);
        output_patch[18] = T(1/4.)*(input_patch[0] - input_patch[10] + input_patch[11] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] + input_patch[2] + input_patch[9]);
        output_patch[19] = T(1/2.)*(input_patch[11] + input_patch[20] + input_patch[2]);
        output_patch[20] = T(1/4.)*(input_patch[0] + input_patch[12] + input_patch[15] + input_patch[18] + input_patch[21] + input_patch[24] + input_patch[3] + input_patch[6] + input_patch[9]);
        output_patch[21] = T(1/8.)*(input_patch[0] + input_patch[10] + input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[22] = T(1/8.)*(input_patch[0] - input_patch[10] + input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] + input_patch[21] - input_patch[22] + input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[23] = T(1/4.)*(input_patch[11] + input_patch[14] + input_patch[17] + input_patch[20] + input_patch[23] + input_patch[26] + input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[24] = T(1/4.)*(input_patch[0] - input_patch[12] + input_patch[15] + input_patch[18] - input_patch[21] + input_patch[24] - input_patch[3] + input_patch[6] + input_patch[9]);
        output_patch[25] = T(1/8.)*(input_patch[0] + input_patch[10] + input_patch[11] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[15] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] - input_patch[21] - input_patch[22] - input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[26] = T(1/8.)*(input_patch[0] - input_patch[10] + input_patch[11] - input_patch[12] + input_patch[13] - input_patch[14] + input_patch[15] - input_patch[16] + input_patch[17] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] - input_patch[21] + input_patch[22] - input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] + input_patch[9]);
        output_patch[27] = T(1/4.)*(input_patch[11] - input_patch[14] + input_patch[17] + input_patch[20] - input_patch[23] + input_patch[26] + input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[28] = T(1/2.)*(input_patch[15] + input_patch[24] + input_patch[6]);
        output_patch[29] = T(1/4.)*(input_patch[15] + input_patch[16] + input_patch[17] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[30] = T(1/4.)*(input_patch[15] - input_patch[16] + input_patch[17] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[31] = T(1/2.)*(input_patch[17] + input_patch[26] + input_patch[8]);
        output_patch[32] = T(1/2.)*(input_patch[0] + input_patch[18] - input_patch[9]);
        output_patch[33] = T(1/4.)*(input_patch[0] - input_patch[10] - input_patch[11] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[2] - input_patch[9]);
        output_patch[34] = T(1/4.)*(input_patch[0] + input_patch[10] - input_patch[11] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] + input_patch[2] - input_patch[9]);
        output_patch[35] = T(1/2.)*(-input_patch[11] + input_patch[20] + input_patch[2]);
        output_patch[36] = T(1/4.)*(input_patch[0] - input_patch[12] - input_patch[15] + input_patch[18] + input_patch[21] + input_patch[24] + input_patch[3] + input_patch[6] - input_patch[9]);
        output_patch[37] = T(1/8.)*(input_patch[0] - input_patch[10] - input_patch[11] - input_patch[12] - input_patch[13] - input_patch[14] - input_patch[15] - input_patch[16] - input_patch[17] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] + input_patch[3] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] - input_patch[9]);
        output_patch[38] = T(1/8.)*(input_patch[0] + input_patch[10] - input_patch[11] - input_patch[12] + input_patch[13] - input_patch[14] - input_patch[15] + input_patch[16] - input_patch[17] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] + input_patch[21] - input_patch[22] + input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[2] + input_patch[3] - input_patch[4] + input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] - input_patch[9]);
        output_patch[39] = T(1/4.)*(-input_patch[11] - input_patch[14] - input_patch[17] + input_patch[20] + input_patch[23] + input_patch[26] + input_patch[2] + input_patch[5] + input_patch[8]);
        output_patch[40] = T(1/4.)*(input_patch[0] + input_patch[12] - input_patch[15] + input_patch[18] - input_patch[21] + input_patch[24] - input_patch[3] + input_patch[6] - input_patch[9]);
        output_patch[41] = T(1/8.)*(input_patch[0] - input_patch[10] - input_patch[11] + input_patch[12] + input_patch[13] + input_patch[14] - input_patch[15] - input_patch[16] - input_patch[17] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[20] - input_patch[21] - input_patch[22] - input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] - input_patch[3] - input_patch[4] - input_patch[5] + input_patch[6] + input_patch[7] + input_patch[8] - input_patch[9]);
        output_patch[42] = T(1/8.)*(input_patch[0] + input_patch[10] - input_patch[11] + input_patch[12] - input_patch[13] + input_patch[14] - input_patch[15] + input_patch[16] - input_patch[17] + input_patch[18] - input_patch[19] - input_patch[1] + input_patch[20] - input_patch[21] + input_patch[22] - input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[2] - input_patch[3] + input_patch[4] - input_patch[5] + input_patch[6] - input_patch[7] + input_patch[8] - input_patch[9]);
        output_patch[43] = T(1/4.)*(-input_patch[11] + input_patch[14] - input_patch[17] + input_patch[20] - input_patch[23] + input_patch[26] + input_patch[2] - input_patch[5] + input_patch[8]);
        output_patch[44] = T(1/2.)*(-input_patch[15] + input_patch[24] + input_patch[6]);
        output_patch[45] = T(1/4.)*(-input_patch[15] - input_patch[16] - input_patch[17] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[6] + input_patch[7] + input_patch[8]);
        output_patch[46] = T(1/4.)*(-input_patch[15] + input_patch[16] - input_patch[17] + input_patch[24] - input_patch[25] + input_patch[26] + input_patch[6] - input_patch[7] + input_patch[8]);
        output_patch[47] = T(1/2.)*(-input_patch[17] + input_patch[26] + input_patch[8]);
        output_patch[48] = input_patch[18];
        output_patch[49] = T(1/2.)*(input_patch[18] + input_patch[19] + input_patch[20]);
        output_patch[50] = T(1/2.)*(input_patch[18] - input_patch[19] + input_patch[20]);
        output_patch[51] = input_patch[20];
        output_patch[52] = T(1/2.)*(input_patch[18] + input_patch[21] + input_patch[24]);
        output_patch[53] = T(1/4.)*(input_patch[18] + input_patch[19] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26]);
        output_patch[54] = T(1/4.)*(input_patch[18] - input_patch[19] + input_patch[20] + input_patch[21] - input_patch[22] + input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26]);
        output_patch[55] = T(1/2.)*(input_patch[20] + input_patch[23] + input_patch[26]);
        output_patch[56] = T(1/2.)*(input_patch[18] - input_patch[21] + input_patch[24]);
        output_patch[57] = T(1/4.)*(input_patch[18] + input_patch[19] + input_patch[20] - input_patch[21] - input_patch[22] - input_patch[23] + input_patch[24] + input_patch[25] + input_patch[26]);
        output_patch[58] = T(1/4.)*(input_patch[18] - input_patch[19] + input_patch[20] - input_patch[21] + input_patch[22] - input_patch[23] + input_patch[24] - input_patch[25] + input_patch[26]);
        output_patch[59] = T(1/2.)*(input_patch[20] - input_patch[23] + input_patch[26]);
        output_patch[60] = input_patch[24];
        output_patch[61] = T(1/2.)*(input_patch[24] + input_patch[25] + input_patch[26]);
        output_patch[62] = T(1/2.)*(input_patch[24] - input_patch[25] + input_patch[26]);
        output_patch[63] = input_patch[26];
    }
}

template <typename T>
__device__ __forceinline__ void inputNorm2WinoCalculation(T *input_patch, T *output_patch, int D, int H, int W) {
    if(D == 1 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0];
        output_patch[1] = input_patch[1];
        output_patch[2] = input_patch[2];
        output_patch[3] = input_patch[3];
        output_patch[4] = input_patch[4];
        output_patch[5] = input_patch[5];
        output_patch[6] = input_patch[6];
        output_patch[7] = input_patch[7];
    } else if(D == 1 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[1];
        output_patch[1] = input_patch[1];
        output_patch[2] = -input_patch[1] + input_patch[2];
        output_patch[3] = input_patch[3] - input_patch[4];
        output_patch[4] = input_patch[4];
        output_patch[5] = -input_patch[4] + input_patch[5];
        output_patch[6] = input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[7];
        output_patch[8] = -input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] + input_patch[9];
        output_patch[10] = input_patch[10];
        output_patch[11] = -input_patch[10] + input_patch[11];
    } else if(D == 1 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0] - input_patch[2];
        output_patch[1] = input_patch[1] + input_patch[2];
        output_patch[2] = -input_patch[1] + input_patch[2];
        output_patch[3] = input_patch[1] - input_patch[3];
        output_patch[4] = input_patch[4] - input_patch[6];
        output_patch[5] = input_patch[5] + input_patch[6];
        output_patch[6] = -input_patch[5] + input_patch[6];
        output_patch[7] = input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14];
        output_patch[13] = input_patch[13] + input_patch[14];
        output_patch[14] = -input_patch[13] + input_patch[14];
        output_patch[15] = input_patch[13] - input_patch[15];
    } else if(D == 1 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[2];
        output_patch[1] = input_patch[1] - input_patch[3];
        output_patch[2] = input_patch[2];
        output_patch[3] = input_patch[3];
        output_patch[4] = -input_patch[2] + input_patch[4];
        output_patch[5] = -input_patch[3] + input_patch[5];
        output_patch[6] = input_patch[6] - input_patch[8];
        output_patch[7] = input_patch[7] - input_patch[9];
        output_patch[8] = input_patch[8];
        output_patch[9] = input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[8];
        output_patch[11] = input_patch[11] - input_patch[9];
    } else if(D == 1 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[1] - input_patch[3] + input_patch[4];
        output_patch[1] = input_patch[1] - input_patch[4];
        output_patch[2] = -input_patch[1] + input_patch[2] + input_patch[4] - input_patch[5];
        output_patch[3] = input_patch[3] - input_patch[4];
        output_patch[4] = input_patch[4];
        output_patch[5] = -input_patch[4] + input_patch[5];
        output_patch[6] = -input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = -input_patch[4] + input_patch[7];
        output_patch[8] = input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] - input_patch[12] + input_patch[13] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[13];
        output_patch[11] = -input_patch[10] + input_patch[11] + input_patch[13] - input_patch[14];
        output_patch[12] = input_patch[12] - input_patch[13];
        output_patch[13] = input_patch[13];
        output_patch[14] = -input_patch[13] + input_patch[14];
        output_patch[15] = -input_patch[12] + input_patch[13] + input_patch[15] - input_patch[16];
        output_patch[16] = -input_patch[13] + input_patch[16];
        output_patch[17] = input_patch[13] - input_patch[14] - input_patch[16] + input_patch[17];
    } else if(D == 1 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0] - input_patch[2] - input_patch[4] + input_patch[6];
        output_patch[1] = input_patch[1] + input_patch[2] - input_patch[5] - input_patch[6];
        output_patch[2] = -input_patch[1] + input_patch[2] + input_patch[5] - input_patch[6];
        output_patch[3] = input_patch[1] - input_patch[3] - input_patch[5] + input_patch[7];
        output_patch[4] = input_patch[4] - input_patch[6];
        output_patch[5] = input_patch[5] + input_patch[6];
        output_patch[6] = -input_patch[5] + input_patch[6];
        output_patch[7] = input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] - input_patch[16] + input_patch[18];
        output_patch[13] = input_patch[13] + input_patch[14] - input_patch[17] - input_patch[18];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[17] - input_patch[18];
        output_patch[15] = input_patch[13] - input_patch[15] - input_patch[17] + input_patch[19];
        output_patch[16] = input_patch[16] - input_patch[18];
        output_patch[17] = input_patch[17] + input_patch[18];
        output_patch[18] = -input_patch[17] + input_patch[18];
        output_patch[19] = input_patch[17] - input_patch[19];
        output_patch[20] = -input_patch[16] + input_patch[18] + input_patch[20] - input_patch[22];
        output_patch[21] = -input_patch[17] - input_patch[18] + input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[17] - input_patch[18] - input_patch[21] + input_patch[22];
        output_patch[23] = -input_patch[17] + input_patch[19] + input_patch[21] - input_patch[23];
    } else if(D == 1 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[4];
        output_patch[1] = input_patch[1] - input_patch[5];
        output_patch[2] = input_patch[2] + input_patch[4];
        output_patch[3] = input_patch[3] + input_patch[5];
        output_patch[4] = -input_patch[2] + input_patch[4];
        output_patch[5] = -input_patch[3] + input_patch[5];
        output_patch[6] = input_patch[2] - input_patch[6];
        output_patch[7] = input_patch[3] - input_patch[7];
        output_patch[8] = -input_patch[12] + input_patch[8];
        output_patch[9] = -input_patch[13] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[12];
        output_patch[11] = input_patch[11] + input_patch[13];
        output_patch[12] = -input_patch[10] + input_patch[12];
        output_patch[13] = -input_patch[11] + input_patch[13];
        output_patch[14] = input_patch[10] - input_patch[14];
        output_patch[15] = input_patch[11] - input_patch[15];
    } else if(D == 1 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[1] - input_patch[6] + input_patch[7];
        output_patch[1] = input_patch[1] - input_patch[7];
        output_patch[2] = -input_patch[1] + input_patch[2] + input_patch[7] - input_patch[8];
        output_patch[3] = input_patch[3] - input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[4] = input_patch[4] + input_patch[7];
        output_patch[5] = -input_patch[4] + input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[6] = -input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = -input_patch[4] + input_patch[7];
        output_patch[8] = input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[3] - input_patch[4] - input_patch[9];
        output_patch[10] = -input_patch[10] + input_patch[4];
        output_patch[11] = input_patch[10] - input_patch[11] - input_patch[4] + input_patch[5];
        output_patch[12] = input_patch[12] - input_patch[13] - input_patch[18] + input_patch[19];
        output_patch[13] = input_patch[13] - input_patch[19];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[19] - input_patch[20];
        output_patch[15] = input_patch[15] - input_patch[16] + input_patch[18] - input_patch[19];
        output_patch[16] = input_patch[16] + input_patch[19];
        output_patch[17] = -input_patch[16] + input_patch[17] - input_patch[19] + input_patch[20];
        output_patch[18] = -input_patch[15] + input_patch[16] + input_patch[18] - input_patch[19];
        output_patch[19] = -input_patch[16] + input_patch[19];
        output_patch[20] = input_patch[16] - input_patch[17] - input_patch[19] + input_patch[20];
        output_patch[21] = input_patch[15] - input_patch[16] - input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[16] - input_patch[22];
        output_patch[23] = -input_patch[16] + input_patch[17] + input_patch[22] - input_patch[23];
    } else if(D == 1 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0] + input_patch[10] - input_patch[2] - input_patch[8];
        output_patch[1] = -input_patch[10] + input_patch[1] + input_patch[2] - input_patch[9];
        output_patch[2] = -input_patch[10] - input_patch[1] + input_patch[2] + input_patch[9];
        output_patch[3] = input_patch[11] + input_patch[1] - input_patch[3] - input_patch[9];
        output_patch[4] = -input_patch[10] + input_patch[4] - input_patch[6] + input_patch[8];
        output_patch[5] = input_patch[10] + input_patch[5] + input_patch[6] + input_patch[9];
        output_patch[6] = input_patch[10] - input_patch[5] + input_patch[6] - input_patch[9];
        output_patch[7] = -input_patch[11] + input_patch[5] - input_patch[7] + input_patch[9];
        output_patch[8] = -input_patch[10] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = -input_patch[12] + input_patch[14] + input_patch[4] - input_patch[6];
        output_patch[13] = -input_patch[13] - input_patch[14] + input_patch[5] + input_patch[6];
        output_patch[14] = input_patch[13] - input_patch[14] - input_patch[5] + input_patch[6];
        output_patch[15] = -input_patch[13] + input_patch[15] + input_patch[5] - input_patch[7];
        output_patch[16] = input_patch[16] - input_patch[18] - input_patch[24] + input_patch[26];
        output_patch[17] = input_patch[17] + input_patch[18] - input_patch[25] - input_patch[26];
        output_patch[18] = -input_patch[17] + input_patch[18] + input_patch[25] - input_patch[26];
        output_patch[19] = input_patch[17] - input_patch[19] - input_patch[25] + input_patch[27];
        output_patch[20] = input_patch[20] - input_patch[22] + input_patch[24] - input_patch[26];
        output_patch[21] = input_patch[21] + input_patch[22] + input_patch[25] + input_patch[26];
        output_patch[22] = -input_patch[21] + input_patch[22] - input_patch[25] + input_patch[26];
        output_patch[23] = input_patch[21] - input_patch[23] + input_patch[25] - input_patch[27];
        output_patch[24] = -input_patch[20] + input_patch[22] + input_patch[24] - input_patch[26];
        output_patch[25] = -input_patch[21] - input_patch[22] + input_patch[25] + input_patch[26];
        output_patch[26] = input_patch[21] - input_patch[22] - input_patch[25] + input_patch[26];
        output_patch[27] = -input_patch[21] + input_patch[23] + input_patch[25] - input_patch[27];
        output_patch[28] = input_patch[20] - input_patch[22] - input_patch[28] + input_patch[30];
        output_patch[29] = input_patch[21] + input_patch[22] - input_patch[29] - input_patch[30];
        output_patch[30] = -input_patch[21] + input_patch[22] + input_patch[29] - input_patch[30];
        output_patch[31] = input_patch[21] - input_patch[23] - input_patch[29] + input_patch[31];
    } else if(D == 2 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[4];
        output_patch[1] = input_patch[1] - input_patch[5];
        output_patch[2] = input_patch[2] - input_patch[6];
        output_patch[3] = input_patch[3] - input_patch[7];
        output_patch[4] = input_patch[4];
        output_patch[5] = input_patch[5];
        output_patch[6] = input_patch[6];
        output_patch[7] = input_patch[7];
        output_patch[8] = -input_patch[4] + input_patch[8];
        output_patch[9] = -input_patch[5] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[6];
        output_patch[11] = input_patch[11] - input_patch[7];
    } else if(D == 2 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[1] - input_patch[6] + input_patch[7];
        output_patch[1] = input_patch[1] - input_patch[7];
        output_patch[2] = -input_patch[1] + input_patch[2] + input_patch[7] - input_patch[8];
        output_patch[3] = input_patch[10] + input_patch[3] - input_patch[4] - input_patch[9];
        output_patch[4] = -input_patch[10] + input_patch[4];
        output_patch[5] = input_patch[10] - input_patch[11] - input_patch[4] + input_patch[5];
        output_patch[6] = input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[7];
        output_patch[8] = -input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] + input_patch[9];
        output_patch[10] = input_patch[10];
        output_patch[11] = -input_patch[10] + input_patch[11];
        output_patch[12] = input_patch[12] - input_patch[13] - input_patch[6] + input_patch[7];
        output_patch[13] = input_patch[13] - input_patch[7];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[7] - input_patch[8];
        output_patch[15] = input_patch[10] + input_patch[15] - input_patch[16] - input_patch[9];
        output_patch[16] = -input_patch[10] + input_patch[16];
        output_patch[17] = input_patch[10] - input_patch[11] - input_patch[16] + input_patch[17];
    } else if(D == 2 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0] + input_patch[10] - input_patch[2] - input_patch[8];
        output_patch[1] = -input_patch[10] + input_patch[1] + input_patch[2] - input_patch[9];
        output_patch[2] = -input_patch[10] - input_patch[1] + input_patch[2] + input_patch[9];
        output_patch[3] = input_patch[11] + input_patch[1] - input_patch[3] - input_patch[9];
        output_patch[4] = -input_patch[12] + input_patch[14] + input_patch[4] - input_patch[6];
        output_patch[5] = -input_patch[13] - input_patch[14] + input_patch[5] + input_patch[6];
        output_patch[6] = input_patch[13] - input_patch[14] - input_patch[5] + input_patch[6];
        output_patch[7] = -input_patch[13] + input_patch[15] + input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14];
        output_patch[13] = input_patch[13] + input_patch[14];
        output_patch[14] = -input_patch[13] + input_patch[14];
        output_patch[15] = input_patch[13] - input_patch[15];
        output_patch[16] = input_patch[10] + input_patch[16] - input_patch[18] - input_patch[8];
        output_patch[17] = -input_patch[10] + input_patch[17] + input_patch[18] - input_patch[9];
        output_patch[18] = -input_patch[10] - input_patch[17] + input_patch[18] + input_patch[9];
        output_patch[19] = input_patch[11] + input_patch[17] - input_patch[19] - input_patch[9];
        output_patch[20] = -input_patch[12] + input_patch[14] + input_patch[20] - input_patch[22];
        output_patch[21] = -input_patch[13] - input_patch[14] + input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[13] - input_patch[14] - input_patch[21] + input_patch[22];
        output_patch[23] = -input_patch[13] + input_patch[15] + input_patch[21] - input_patch[23];
    } else if(D == 2 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[2] - input_patch[6] + input_patch[8];
        output_patch[1] = input_patch[1] - input_patch[3] - input_patch[7] + input_patch[9];
        output_patch[2] = input_patch[2] - input_patch[8];
        output_patch[3] = input_patch[3] - input_patch[9];
        output_patch[4] = -input_patch[10] - input_patch[2] + input_patch[4] + input_patch[8];
        output_patch[5] = -input_patch[11] - input_patch[3] + input_patch[5] + input_patch[9];
        output_patch[6] = input_patch[6] - input_patch[8];
        output_patch[7] = input_patch[7] - input_patch[9];
        output_patch[8] = input_patch[8];
        output_patch[9] = input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[8];
        output_patch[11] = input_patch[11] - input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] - input_patch[6] + input_patch[8];
        output_patch[13] = input_patch[13] - input_patch[15] - input_patch[7] + input_patch[9];
        output_patch[14] = input_patch[14] - input_patch[8];
        output_patch[15] = input_patch[15] - input_patch[9];
        output_patch[16] = -input_patch[10] - input_patch[14] + input_patch[16] + input_patch[8];
        output_patch[17] = -input_patch[11] - input_patch[15] + input_patch[17] + input_patch[9];
    } else if(D == 2 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0] + input_patch[10] + input_patch[12] - input_patch[13] - input_patch[1] - input_patch[3] + input_patch[4] - input_patch[9];
        output_patch[1] = -input_patch[10] + input_patch[13] + input_patch[1] - input_patch[4];
        output_patch[2] = input_patch[10] - input_patch[11] - input_patch[13] + input_patch[14] - input_patch[1] + input_patch[2] + input_patch[4] - input_patch[5];
        output_patch[3] = -input_patch[12] + input_patch[13] + input_patch[3] - input_patch[4];
        output_patch[4] = -input_patch[13] + input_patch[4];
        output_patch[5] = input_patch[13] - input_patch[14] - input_patch[4] + input_patch[5];
        output_patch[6] = input_patch[12] - input_patch[13] - input_patch[15] + input_patch[16] - input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[13] - input_patch[16] - input_patch[4] + input_patch[7];
        output_patch[8] = -input_patch[13] + input_patch[14] + input_patch[16] - input_patch[17] + input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] - input_patch[12] + input_patch[13] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[13];
        output_patch[11] = -input_patch[10] + input_patch[11] + input_patch[13] - input_patch[14];
        output_patch[12] = input_patch[12] - input_patch[13];
        output_patch[13] = input_patch[13];
        output_patch[14] = -input_patch[13] + input_patch[14];
        output_patch[15] = -input_patch[12] + input_patch[13] + input_patch[15] - input_patch[16];
        output_patch[16] = -input_patch[13] + input_patch[16];
        output_patch[17] = input_patch[13] - input_patch[14] - input_patch[16] + input_patch[17];
        output_patch[18] = input_patch[10] + input_patch[12] - input_patch[13] + input_patch[18] - input_patch[19] - input_patch[21] + input_patch[22] - input_patch[9];
        output_patch[19] = -input_patch[10] + input_patch[13] + input_patch[19] - input_patch[22];
        output_patch[20] = input_patch[10] - input_patch[11] - input_patch[13] + input_patch[14] - input_patch[19] + input_patch[20] + input_patch[22] - input_patch[23];
        output_patch[21] = -input_patch[12] + input_patch[13] + input_patch[21] - input_patch[22];
        output_patch[22] = -input_patch[13] + input_patch[22];
        output_patch[23] = input_patch[13] - input_patch[14] - input_patch[22] + input_patch[23];
        output_patch[24] = input_patch[12] - input_patch[13] - input_patch[15] + input_patch[16] - input_patch[21] + input_patch[22] + input_patch[24] - input_patch[25];
        output_patch[25] = input_patch[13] - input_patch[16] - input_patch[22] + input_patch[25];
        output_patch[26] = -input_patch[13] + input_patch[14] + input_patch[16] - input_patch[17] + input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26];
    } else if(D == 2 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0] - input_patch[12] + input_patch[14] + input_patch[16] - input_patch[18] - input_patch[2] - input_patch[4] + input_patch[6];
        output_patch[1] = -input_patch[13] - input_patch[14] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[2] - input_patch[5] - input_patch[6];
        output_patch[2] = input_patch[13] - input_patch[14] - input_patch[17] + input_patch[18] - input_patch[1] + input_patch[2] + input_patch[5] - input_patch[6];
        output_patch[3] = -input_patch[13] + input_patch[15] + input_patch[17] - input_patch[19] + input_patch[1] - input_patch[3] - input_patch[5] + input_patch[7];
        output_patch[4] = -input_patch[16] + input_patch[18] + input_patch[4] - input_patch[6];
        output_patch[5] = -input_patch[17] - input_patch[18] + input_patch[5] + input_patch[6];
        output_patch[6] = input_patch[17] - input_patch[18] - input_patch[5] + input_patch[6];
        output_patch[7] = -input_patch[17] + input_patch[19] + input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] + input_patch[16] - input_patch[18] - input_patch[20] + input_patch[22] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[17] + input_patch[18] - input_patch[21] - input_patch[22] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[17] + input_patch[18] + input_patch[21] - input_patch[22] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[17] - input_patch[19] - input_patch[21] + input_patch[23] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] - input_patch[16] + input_patch[18];
        output_patch[13] = input_patch[13] + input_patch[14] - input_patch[17] - input_patch[18];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[17] - input_patch[18];
        output_patch[15] = input_patch[13] - input_patch[15] - input_patch[17] + input_patch[19];
        output_patch[16] = input_patch[16] - input_patch[18];
        output_patch[17] = input_patch[17] + input_patch[18];
        output_patch[18] = -input_patch[17] + input_patch[18];
        output_patch[19] = input_patch[17] - input_patch[19];
        output_patch[20] = -input_patch[16] + input_patch[18] + input_patch[20] - input_patch[22];
        output_patch[21] = -input_patch[17] - input_patch[18] + input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[17] - input_patch[18] - input_patch[21] + input_patch[22];
        output_patch[23] = -input_patch[17] + input_patch[19] + input_patch[21] - input_patch[23];
        output_patch[24] = -input_patch[12] + input_patch[14] + input_patch[16] - input_patch[18] + input_patch[24] - input_patch[26] - input_patch[28] + input_patch[30];
        output_patch[25] = -input_patch[13] - input_patch[14] + input_patch[17] + input_patch[18] + input_patch[25] + input_patch[26] - input_patch[29] - input_patch[30];
        output_patch[26] = input_patch[13] - input_patch[14] - input_patch[17] + input_patch[18] - input_patch[25] + input_patch[26] + input_patch[29] - input_patch[30];
        output_patch[27] = -input_patch[13] + input_patch[15] + input_patch[17] - input_patch[19] + input_patch[25] - input_patch[27] - input_patch[29] + input_patch[31];
        output_patch[28] = -input_patch[16] + input_patch[18] + input_patch[28] - input_patch[30];
        output_patch[29] = -input_patch[17] - input_patch[18] + input_patch[29] + input_patch[30];
        output_patch[30] = input_patch[17] - input_patch[18] - input_patch[29] + input_patch[30];
        output_patch[31] = -input_patch[17] + input_patch[19] + input_patch[29] - input_patch[31];
        output_patch[32] = input_patch[16] - input_patch[18] - input_patch[20] + input_patch[22] - input_patch[28] + input_patch[30] + input_patch[32] - input_patch[34];
        output_patch[33] = input_patch[17] + input_patch[18] - input_patch[21] - input_patch[22] - input_patch[29] - input_patch[30] + input_patch[33] + input_patch[34];
        output_patch[34] = -input_patch[17] + input_patch[18] + input_patch[21] - input_patch[22] + input_patch[29] - input_patch[30] - input_patch[33] + input_patch[34];
        output_patch[35] = input_patch[17] - input_patch[19] - input_patch[21] + input_patch[23] - input_patch[29] + input_patch[31] + input_patch[33] - input_patch[35];
    } else if(D == 2 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0] + input_patch[12] - input_patch[4] - input_patch[8];
        output_patch[1] = input_patch[13] + input_patch[1] - input_patch[5] - input_patch[9];
        output_patch[2] = -input_patch[10] - input_patch[12] + input_patch[2] + input_patch[4];
        output_patch[3] = -input_patch[11] - input_patch[13] + input_patch[3] + input_patch[5];
        output_patch[4] = input_patch[10] - input_patch[12] - input_patch[2] + input_patch[4];
        output_patch[5] = input_patch[11] - input_patch[13] - input_patch[3] + input_patch[5];
        output_patch[6] = -input_patch[10] + input_patch[14] + input_patch[2] - input_patch[6];
        output_patch[7] = -input_patch[11] + input_patch[15] + input_patch[3] - input_patch[7];
        output_patch[8] = -input_patch[12] + input_patch[8];
        output_patch[9] = -input_patch[13] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[12];
        output_patch[11] = input_patch[11] + input_patch[13];
        output_patch[12] = -input_patch[10] + input_patch[12];
        output_patch[13] = -input_patch[11] + input_patch[13];
        output_patch[14] = input_patch[10] - input_patch[14];
        output_patch[15] = input_patch[11] - input_patch[15];
        output_patch[16] = input_patch[12] + input_patch[16] - input_patch[20] - input_patch[8];
        output_patch[17] = input_patch[13] + input_patch[17] - input_patch[21] - input_patch[9];
        output_patch[18] = -input_patch[10] - input_patch[12] + input_patch[18] + input_patch[20];
        output_patch[19] = -input_patch[11] - input_patch[13] + input_patch[19] + input_patch[21];
        output_patch[20] = input_patch[10] - input_patch[12] - input_patch[18] + input_patch[20];
        output_patch[21] = input_patch[11] - input_patch[13] - input_patch[19] + input_patch[21];
        output_patch[22] = -input_patch[10] + input_patch[14] + input_patch[18] - input_patch[22];
        output_patch[23] = -input_patch[11] + input_patch[15] + input_patch[19] - input_patch[23];
    } else if(D == 2 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[12] + input_patch[13] + input_patch[18] - input_patch[19] - input_patch[1] - input_patch[6] + input_patch[7];
        output_patch[1] = -input_patch[13] + input_patch[19] + input_patch[1] - input_patch[7];
        output_patch[2] = input_patch[13] - input_patch[14] - input_patch[19] - input_patch[1] + input_patch[20] + input_patch[2] + input_patch[7] - input_patch[8];
        output_patch[3] = -input_patch[15] + input_patch[16] - input_patch[18] + input_patch[19] + input_patch[3] - input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[4] = -input_patch[16] - input_patch[19] + input_patch[4] + input_patch[7];
        output_patch[5] = input_patch[16] - input_patch[17] + input_patch[19] - input_patch[20] - input_patch[4] + input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[6] = input_patch[15] - input_patch[16] - input_patch[18] + input_patch[19] - input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[16] - input_patch[19] - input_patch[4] + input_patch[7];
        output_patch[8] = -input_patch[16] + input_patch[17] + input_patch[19] - input_patch[20] + input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = input_patch[10] - input_patch[15] + input_patch[16] + input_patch[21] - input_patch[22] + input_patch[3] - input_patch[4] - input_patch[9];
        output_patch[10] = -input_patch[10] - input_patch[16] + input_patch[22] + input_patch[4];
        output_patch[11] = input_patch[10] - input_patch[11] + input_patch[16] - input_patch[17] - input_patch[22] + input_patch[23] - input_patch[4] + input_patch[5];
        output_patch[12] = input_patch[12] - input_patch[13] - input_patch[18] + input_patch[19];
        output_patch[13] = input_patch[13] - input_patch[19];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[19] - input_patch[20];
        output_patch[15] = input_patch[15] - input_patch[16] + input_patch[18] - input_patch[19];
        output_patch[16] = input_patch[16] + input_patch[19];
        output_patch[17] = -input_patch[16] + input_patch[17] - input_patch[19] + input_patch[20];
        output_patch[18] = -input_patch[15] + input_patch[16] + input_patch[18] - input_patch[19];
        output_patch[19] = -input_patch[16] + input_patch[19];
        output_patch[20] = input_patch[16] - input_patch[17] - input_patch[19] + input_patch[20];
        output_patch[21] = input_patch[15] - input_patch[16] - input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[16] - input_patch[22];
        output_patch[23] = -input_patch[16] + input_patch[17] + input_patch[22] - input_patch[23];
        output_patch[24] = -input_patch[12] + input_patch[13] + input_patch[18] - input_patch[19] + input_patch[24] - input_patch[25] - input_patch[30] + input_patch[31];
        output_patch[25] = -input_patch[13] + input_patch[19] + input_patch[25] - input_patch[31];
        output_patch[26] = input_patch[13] - input_patch[14] - input_patch[19] + input_patch[20] - input_patch[25] + input_patch[26] + input_patch[31] - input_patch[32];
        output_patch[27] = -input_patch[15] + input_patch[16] - input_patch[18] + input_patch[19] + input_patch[27] - input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[28] = -input_patch[16] - input_patch[19] + input_patch[28] + input_patch[31];
        output_patch[29] = input_patch[16] - input_patch[17] + input_patch[19] - input_patch[20] - input_patch[28] + input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[30] = input_patch[15] - input_patch[16] - input_patch[18] + input_patch[19] - input_patch[27] + input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[31] = input_patch[16] - input_patch[19] - input_patch[28] + input_patch[31];
        output_patch[32] = -input_patch[16] + input_patch[17] + input_patch[19] - input_patch[20] + input_patch[28] - input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[33] = -input_patch[15] + input_patch[16] + input_patch[21] - input_patch[22] + input_patch[27] - input_patch[28] - input_patch[33] + input_patch[34];
        output_patch[34] = -input_patch[16] + input_patch[22] + input_patch[28] - input_patch[34];
        output_patch[35] = input_patch[16] - input_patch[17] - input_patch[22] + input_patch[23] - input_patch[28] + input_patch[29] + input_patch[34] - input_patch[35];
    } else if(D == 2 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0] + input_patch[10] - input_patch[16] + input_patch[18] + input_patch[24] - input_patch[26] - input_patch[2] - input_patch[8];
        output_patch[1] = -input_patch[10] - input_patch[17] - input_patch[18] + input_patch[1] + input_patch[25] + input_patch[26] + input_patch[2] - input_patch[9];
        output_patch[2] = -input_patch[10] + input_patch[17] - input_patch[18] - input_patch[1] - input_patch[25] + input_patch[26] + input_patch[2] + input_patch[9];
        output_patch[3] = input_patch[11] - input_patch[17] + input_patch[19] + input_patch[1] + input_patch[25] - input_patch[27] - input_patch[3] - input_patch[9];
        output_patch[4] = -input_patch[10] - input_patch[20] + input_patch[22] - input_patch[24] + input_patch[26] + input_patch[4] - input_patch[6] + input_patch[8];
        output_patch[5] = input_patch[10] - input_patch[21] - input_patch[22] - input_patch[25] - input_patch[26] + input_patch[5] + input_patch[6] + input_patch[9];
        output_patch[6] = input_patch[10] + input_patch[21] - input_patch[22] + input_patch[25] - input_patch[26] - input_patch[5] + input_patch[6] - input_patch[9];
        output_patch[7] = -input_patch[11] - input_patch[21] + input_patch[23] - input_patch[25] + input_patch[27] + input_patch[5] - input_patch[7] + input_patch[9];
        output_patch[8] = -input_patch[10] + input_patch[20] - input_patch[22] - input_patch[24] + input_patch[26] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[21] + input_patch[22] - input_patch[25] - input_patch[26] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[21] + input_patch[22] + input_patch[25] - input_patch[26] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[21] - input_patch[23] - input_patch[25] + input_patch[27] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = -input_patch[12] + input_patch[14] - input_patch[20] + input_patch[22] + input_patch[28] - input_patch[30] + input_patch[4] - input_patch[6];
        output_patch[13] = -input_patch[13] - input_patch[14] - input_patch[21] - input_patch[22] + input_patch[29] + input_patch[30] + input_patch[5] + input_patch[6];
        output_patch[14] = input_patch[13] - input_patch[14] + input_patch[21] - input_patch[22] - input_patch[29] + input_patch[30] - input_patch[5] + input_patch[6];
        output_patch[15] = -input_patch[13] + input_patch[15] - input_patch[21] + input_patch[23] + input_patch[29] - input_patch[31] + input_patch[5] - input_patch[7];
        output_patch[16] = input_patch[16] - input_patch[18] - input_patch[24] + input_patch[26];
        output_patch[17] = input_patch[17] + input_patch[18] - input_patch[25] - input_patch[26];
        output_patch[18] = -input_patch[17] + input_patch[18] + input_patch[25] - input_patch[26];
        output_patch[19] = input_patch[17] - input_patch[19] - input_patch[25] + input_patch[27];
        output_patch[20] = input_patch[20] - input_patch[22] + input_patch[24] - input_patch[26];
        output_patch[21] = input_patch[21] + input_patch[22] + input_patch[25] + input_patch[26];
        output_patch[22] = -input_patch[21] + input_patch[22] - input_patch[25] + input_patch[26];
        output_patch[23] = input_patch[21] - input_patch[23] + input_patch[25] - input_patch[27];
        output_patch[24] = -input_patch[20] + input_patch[22] + input_patch[24] - input_patch[26];
        output_patch[25] = -input_patch[21] - input_patch[22] + input_patch[25] + input_patch[26];
        output_patch[26] = input_patch[21] - input_patch[22] - input_patch[25] + input_patch[26];
        output_patch[27] = -input_patch[21] + input_patch[23] + input_patch[25] - input_patch[27];
        output_patch[28] = input_patch[20] - input_patch[22] - input_patch[28] + input_patch[30];
        output_patch[29] = input_patch[21] + input_patch[22] - input_patch[29] - input_patch[30];
        output_patch[30] = -input_patch[21] + input_patch[22] + input_patch[29] - input_patch[30];
        output_patch[31] = input_patch[21] - input_patch[23] - input_patch[29] + input_patch[31];
        output_patch[32] = -input_patch[16] + input_patch[18] + input_patch[24] - input_patch[26] + input_patch[32] - input_patch[34] - input_patch[40] + input_patch[42];
        output_patch[33] = -input_patch[17] - input_patch[18] + input_patch[25] + input_patch[26] + input_patch[33] + input_patch[34] - input_patch[41] - input_patch[42];
        output_patch[34] = input_patch[17] - input_patch[18] - input_patch[25] + input_patch[26] - input_patch[33] + input_patch[34] + input_patch[41] - input_patch[42];
        output_patch[35] = -input_patch[17] + input_patch[19] + input_patch[25] - input_patch[27] + input_patch[33] - input_patch[35] - input_patch[41] + input_patch[43];
        output_patch[36] = -input_patch[20] + input_patch[22] - input_patch[24] + input_patch[26] + input_patch[36] - input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[37] = -input_patch[21] - input_patch[22] - input_patch[25] - input_patch[26] + input_patch[37] + input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[38] = input_patch[21] - input_patch[22] + input_patch[25] - input_patch[26] - input_patch[37] + input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[39] = -input_patch[21] + input_patch[23] - input_patch[25] + input_patch[27] + input_patch[37] - input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[40] = input_patch[20] - input_patch[22] - input_patch[24] + input_patch[26] - input_patch[36] + input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[41] = input_patch[21] + input_patch[22] - input_patch[25] - input_patch[26] - input_patch[37] - input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[42] = -input_patch[21] + input_patch[22] + input_patch[25] - input_patch[26] + input_patch[37] - input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[43] = input_patch[21] - input_patch[23] - input_patch[25] + input_patch[27] - input_patch[37] + input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[44] = -input_patch[20] + input_patch[22] + input_patch[28] - input_patch[30] + input_patch[36] - input_patch[38] - input_patch[44] + input_patch[46];
        output_patch[45] = -input_patch[21] - input_patch[22] + input_patch[29] + input_patch[30] + input_patch[37] + input_patch[38] - input_patch[45] - input_patch[46];
        output_patch[46] = input_patch[21] - input_patch[22] - input_patch[29] + input_patch[30] - input_patch[37] + input_patch[38] + input_patch[45] - input_patch[46];
        output_patch[47] = -input_patch[21] + input_patch[23] + input_patch[29] - input_patch[31] + input_patch[37] - input_patch[39] - input_patch[45] + input_patch[47];
    } else if(D == 3 && H == 1 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[8];
        output_patch[1] = input_patch[1] - input_patch[9];
        output_patch[2] = -input_patch[10] + input_patch[2];
        output_patch[3] = -input_patch[11] + input_patch[3];
        output_patch[4] = input_patch[4] + input_patch[8];
        output_patch[5] = input_patch[5] + input_patch[9];
        output_patch[6] = input_patch[10] + input_patch[6];
        output_patch[7] = input_patch[11] + input_patch[7];
        output_patch[8] = -input_patch[4] + input_patch[8];
        output_patch[9] = -input_patch[5] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[6];
        output_patch[11] = input_patch[11] - input_patch[7];
        output_patch[12] = -input_patch[12] + input_patch[4];
        output_patch[13] = -input_patch[13] + input_patch[5];
        output_patch[14] = -input_patch[14] + input_patch[6];
        output_patch[15] = -input_patch[15] + input_patch[7];
    } else if(D == 3 && H == 1 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[12] + input_patch[13] - input_patch[1];
        output_patch[1] = -input_patch[13] + input_patch[1];
        output_patch[2] = input_patch[13] - input_patch[14] - input_patch[1] + input_patch[2];
        output_patch[3] = -input_patch[15] + input_patch[16] + input_patch[3] - input_patch[4];
        output_patch[4] = -input_patch[16] + input_patch[4];
        output_patch[5] = input_patch[16] - input_patch[17] - input_patch[4] + input_patch[5];
        output_patch[6] = input_patch[12] - input_patch[13] + input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[13] + input_patch[7];
        output_patch[8] = -input_patch[13] + input_patch[14] - input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] + input_patch[15] - input_patch[16] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[16];
        output_patch[11] = -input_patch[10] + input_patch[11] - input_patch[16] + input_patch[17];
        output_patch[12] = input_patch[12] - input_patch[13] - input_patch[6] + input_patch[7];
        output_patch[13] = input_patch[13] - input_patch[7];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[7] - input_patch[8];
        output_patch[15] = input_patch[10] + input_patch[15] - input_patch[16] - input_patch[9];
        output_patch[16] = -input_patch[10] + input_patch[16];
        output_patch[17] = input_patch[10] - input_patch[11] - input_patch[16] + input_patch[17];
        output_patch[18] = -input_patch[18] + input_patch[19] + input_patch[6] - input_patch[7];
        output_patch[19] = -input_patch[19] + input_patch[7];
        output_patch[20] = input_patch[19] - input_patch[20] - input_patch[7] + input_patch[8];
        output_patch[21] = -input_patch[10] - input_patch[21] + input_patch[22] + input_patch[9];
        output_patch[22] = input_patch[10] - input_patch[22];
        output_patch[23] = -input_patch[10] + input_patch[11] + input_patch[22] - input_patch[23];
    } else if(D == 3 && H == 1 && W == 3) {
        output_patch[0] = input_patch[0] - input_patch[16] + input_patch[18] - input_patch[2];
        output_patch[1] = -input_patch[17] - input_patch[18] + input_patch[1] + input_patch[2];
        output_patch[2] = input_patch[17] - input_patch[18] - input_patch[1] + input_patch[2];
        output_patch[3] = -input_patch[17] + input_patch[19] + input_patch[1] - input_patch[3];
        output_patch[4] = -input_patch[20] + input_patch[22] + input_patch[4] - input_patch[6];
        output_patch[5] = -input_patch[21] - input_patch[22] + input_patch[5] + input_patch[6];
        output_patch[6] = input_patch[21] - input_patch[22] - input_patch[5] + input_patch[6];
        output_patch[7] = -input_patch[21] + input_patch[23] + input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] + input_patch[16] - input_patch[18] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[17] + input_patch[18] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[17] + input_patch[18] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[17] - input_patch[19] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] + input_patch[20] - input_patch[22];
        output_patch[13] = input_patch[13] + input_patch[14] + input_patch[21] + input_patch[22];
        output_patch[14] = -input_patch[13] + input_patch[14] - input_patch[21] + input_patch[22];
        output_patch[15] = input_patch[13] - input_patch[15] + input_patch[21] - input_patch[23];
        output_patch[16] = input_patch[10] + input_patch[16] - input_patch[18] - input_patch[8];
        output_patch[17] = -input_patch[10] + input_patch[17] + input_patch[18] - input_patch[9];
        output_patch[18] = -input_patch[10] - input_patch[17] + input_patch[18] + input_patch[9];
        output_patch[19] = input_patch[11] + input_patch[17] - input_patch[19] - input_patch[9];
        output_patch[20] = -input_patch[12] + input_patch[14] + input_patch[20] - input_patch[22];
        output_patch[21] = -input_patch[13] - input_patch[14] + input_patch[21] + input_patch[22];
        output_patch[22] = input_patch[13] - input_patch[14] - input_patch[21] + input_patch[22];
        output_patch[23] = -input_patch[13] + input_patch[15] + input_patch[21] - input_patch[23];
        output_patch[24] = -input_patch[10] - input_patch[24] + input_patch[26] + input_patch[8];
        output_patch[25] = input_patch[10] - input_patch[25] - input_patch[26] + input_patch[9];
        output_patch[26] = input_patch[10] + input_patch[25] - input_patch[26] - input_patch[9];
        output_patch[27] = -input_patch[11] - input_patch[25] + input_patch[27] + input_patch[9];
        output_patch[28] = input_patch[12] - input_patch[14] - input_patch[28] + input_patch[30];
        output_patch[29] = input_patch[13] + input_patch[14] - input_patch[29] - input_patch[30];
        output_patch[30] = -input_patch[13] + input_patch[14] + input_patch[29] - input_patch[30];
        output_patch[31] = input_patch[13] - input_patch[15] - input_patch[29] + input_patch[31];
    } else if(D == 3 && H == 2 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[12] + input_patch[14] - input_patch[2];
        output_patch[1] = -input_patch[13] + input_patch[15] + input_patch[1] - input_patch[3];
        output_patch[2] = -input_patch[14] + input_patch[2];
        output_patch[3] = -input_patch[15] + input_patch[3];
        output_patch[4] = input_patch[14] - input_patch[16] - input_patch[2] + input_patch[4];
        output_patch[5] = input_patch[15] - input_patch[17] - input_patch[3] + input_patch[5];
        output_patch[6] = input_patch[12] - input_patch[14] + input_patch[6] - input_patch[8];
        output_patch[7] = input_patch[13] - input_patch[15] + input_patch[7] - input_patch[9];
        output_patch[8] = input_patch[14] + input_patch[8];
        output_patch[9] = input_patch[15] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[14] + input_patch[16] - input_patch[8];
        output_patch[11] = input_patch[11] - input_patch[15] + input_patch[17] - input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] - input_patch[6] + input_patch[8];
        output_patch[13] = input_patch[13] - input_patch[15] - input_patch[7] + input_patch[9];
        output_patch[14] = input_patch[14] - input_patch[8];
        output_patch[15] = input_patch[15] - input_patch[9];
        output_patch[16] = -input_patch[10] - input_patch[14] + input_patch[16] + input_patch[8];
        output_patch[17] = -input_patch[11] - input_patch[15] + input_patch[17] + input_patch[9];
        output_patch[18] = -input_patch[18] + input_patch[20] + input_patch[6] - input_patch[8];
        output_patch[19] = -input_patch[19] + input_patch[21] + input_patch[7] - input_patch[9];
        output_patch[20] = -input_patch[20] + input_patch[8];
        output_patch[21] = -input_patch[21] + input_patch[9];
        output_patch[22] = input_patch[10] + input_patch[20] - input_patch[22] - input_patch[8];
        output_patch[23] = input_patch[11] + input_patch[21] - input_patch[23] - input_patch[9];
    } else if(D == 3 && H == 2 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[18] + input_patch[19] - input_patch[1] + input_patch[21] - input_patch[22] - input_patch[3] + input_patch[4];
        output_patch[1] = -input_patch[19] + input_patch[1] + input_patch[22] - input_patch[4];
        output_patch[2] = input_patch[19] - input_patch[1] - input_patch[20] - input_patch[22] + input_patch[23] + input_patch[2] + input_patch[4] - input_patch[5];
        output_patch[3] = -input_patch[21] + input_patch[22] + input_patch[3] - input_patch[4];
        output_patch[4] = -input_patch[22] + input_patch[4];
        output_patch[5] = input_patch[22] - input_patch[23] - input_patch[4] + input_patch[5];
        output_patch[6] = input_patch[21] - input_patch[22] - input_patch[24] + input_patch[25] - input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[22] - input_patch[25] - input_patch[4] + input_patch[7];
        output_patch[8] = -input_patch[22] + input_patch[23] + input_patch[25] - input_patch[26] + input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = -input_patch[10] - input_patch[12] + input_patch[13] + input_patch[18] - input_patch[19] - input_patch[21] + input_patch[22] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[13] + input_patch[19] - input_patch[22];
        output_patch[11] = -input_patch[10] + input_patch[11] + input_patch[13] - input_patch[14] - input_patch[19] + input_patch[20] + input_patch[22] - input_patch[23];
        output_patch[12] = input_patch[12] - input_patch[13] + input_patch[21] - input_patch[22];
        output_patch[13] = input_patch[13] + input_patch[22];
        output_patch[14] = -input_patch[13] + input_patch[14] - input_patch[22] + input_patch[23];
        output_patch[15] = -input_patch[12] + input_patch[13] + input_patch[15] - input_patch[16] - input_patch[21] + input_patch[22] + input_patch[24] - input_patch[25];
        output_patch[16] = -input_patch[13] + input_patch[16] - input_patch[22] + input_patch[25];
        output_patch[17] = input_patch[13] - input_patch[14] - input_patch[16] + input_patch[17] + input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26];
        output_patch[18] = input_patch[10] + input_patch[12] - input_patch[13] + input_patch[18] - input_patch[19] - input_patch[21] + input_patch[22] - input_patch[9];
        output_patch[19] = -input_patch[10] + input_patch[13] + input_patch[19] - input_patch[22];
        output_patch[20] = input_patch[10] - input_patch[11] - input_patch[13] + input_patch[14] - input_patch[19] + input_patch[20] + input_patch[22] - input_patch[23];
        output_patch[21] = -input_patch[12] + input_patch[13] + input_patch[21] - input_patch[22];
        output_patch[22] = -input_patch[13] + input_patch[22];
        output_patch[23] = input_patch[13] - input_patch[14] - input_patch[22] + input_patch[23];
        output_patch[24] = input_patch[12] - input_patch[13] - input_patch[15] + input_patch[16] - input_patch[21] + input_patch[22] + input_patch[24] - input_patch[25];
        output_patch[25] = input_patch[13] - input_patch[16] - input_patch[22] + input_patch[25];
        output_patch[26] = -input_patch[13] + input_patch[14] + input_patch[16] - input_patch[17] + input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26];
        output_patch[27] = -input_patch[10] - input_patch[12] + input_patch[13] - input_patch[27] + input_patch[28] + input_patch[30] - input_patch[31] + input_patch[9];
        output_patch[28] = input_patch[10] - input_patch[13] - input_patch[28] + input_patch[31];
        output_patch[29] = -input_patch[10] + input_patch[11] + input_patch[13] - input_patch[14] + input_patch[28] - input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[30] = input_patch[12] - input_patch[13] - input_patch[30] + input_patch[31];
        output_patch[31] = input_patch[13] - input_patch[31];
        output_patch[32] = -input_patch[13] + input_patch[14] + input_patch[31] - input_patch[32];
        output_patch[33] = -input_patch[12] + input_patch[13] + input_patch[15] - input_patch[16] + input_patch[30] - input_patch[31] - input_patch[33] + input_patch[34];
        output_patch[34] = -input_patch[13] + input_patch[16] + input_patch[31] - input_patch[34];
        output_patch[35] = input_patch[13] - input_patch[14] - input_patch[16] + input_patch[17] - input_patch[31] + input_patch[32] + input_patch[34] - input_patch[35];
    } else if(D == 3 && H == 2 && W == 3) {
        output_patch[0] = input_patch[0] - input_patch[24] + input_patch[26] + input_patch[28] - input_patch[2] - input_patch[30] - input_patch[4] + input_patch[6];
        output_patch[1] = input_patch[1] - input_patch[25] - input_patch[26] + input_patch[29] + input_patch[2] + input_patch[30] - input_patch[5] - input_patch[6];
        output_patch[2] = -input_patch[1] + input_patch[25] - input_patch[26] - input_patch[29] + input_patch[2] + input_patch[30] + input_patch[5] - input_patch[6];
        output_patch[3] = input_patch[1] - input_patch[25] + input_patch[27] + input_patch[29] - input_patch[31] - input_patch[3] - input_patch[5] + input_patch[7];
        output_patch[4] = -input_patch[28] + input_patch[30] + input_patch[4] - input_patch[6];
        output_patch[5] = -input_patch[29] - input_patch[30] + input_patch[5] + input_patch[6];
        output_patch[6] = input_patch[29] - input_patch[30] - input_patch[5] + input_patch[6];
        output_patch[7] = -input_patch[29] + input_patch[31] + input_patch[5] - input_patch[7];
        output_patch[8] = -input_patch[10] + input_patch[28] - input_patch[30] - input_patch[32] + input_patch[34] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[29] + input_patch[30] - input_patch[33] - input_patch[34] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[29] + input_patch[30] + input_patch[33] - input_patch[34] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[29] - input_patch[31] - input_patch[33] + input_patch[35] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = input_patch[12] - input_patch[14] - input_patch[16] + input_patch[18] + input_patch[24] - input_patch[26] - input_patch[28] + input_patch[30];
        output_patch[13] = input_patch[13] + input_patch[14] - input_patch[17] - input_patch[18] + input_patch[25] + input_patch[26] - input_patch[29] - input_patch[30];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[17] - input_patch[18] - input_patch[25] + input_patch[26] + input_patch[29] - input_patch[30];
        output_patch[15] = input_patch[13] - input_patch[15] - input_patch[17] + input_patch[19] + input_patch[25] - input_patch[27] - input_patch[29] + input_patch[31];
        output_patch[16] = input_patch[16] - input_patch[18] + input_patch[28] - input_patch[30];
        output_patch[17] = input_patch[17] + input_patch[18] + input_patch[29] + input_patch[30];
        output_patch[18] = -input_patch[17] + input_patch[18] - input_patch[29] + input_patch[30];
        output_patch[19] = input_patch[17] - input_patch[19] + input_patch[29] - input_patch[31];
        output_patch[20] = -input_patch[16] + input_patch[18] + input_patch[20] - input_patch[22] - input_patch[28] + input_patch[30] + input_patch[32] - input_patch[34];
        output_patch[21] = -input_patch[17] - input_patch[18] + input_patch[21] + input_patch[22] - input_patch[29] - input_patch[30] + input_patch[33] + input_patch[34];
        output_patch[22] = input_patch[17] - input_patch[18] - input_patch[21] + input_patch[22] + input_patch[29] - input_patch[30] - input_patch[33] + input_patch[34];
        output_patch[23] = -input_patch[17] + input_patch[19] + input_patch[21] - input_patch[23] - input_patch[29] + input_patch[31] + input_patch[33] - input_patch[35];
        output_patch[24] = -input_patch[12] + input_patch[14] + input_patch[16] - input_patch[18] + input_patch[24] - input_patch[26] - input_patch[28] + input_patch[30];
        output_patch[25] = -input_patch[13] - input_patch[14] + input_patch[17] + input_patch[18] + input_patch[25] + input_patch[26] - input_patch[29] - input_patch[30];
        output_patch[26] = input_patch[13] - input_patch[14] - input_patch[17] + input_patch[18] - input_patch[25] + input_patch[26] + input_patch[29] - input_patch[30];
        output_patch[27] = -input_patch[13] + input_patch[15] + input_patch[17] - input_patch[19] + input_patch[25] - input_patch[27] - input_patch[29] + input_patch[31];
        output_patch[28] = -input_patch[16] + input_patch[18] + input_patch[28] - input_patch[30];
        output_patch[29] = -input_patch[17] - input_patch[18] + input_patch[29] + input_patch[30];
        output_patch[30] = input_patch[17] - input_patch[18] - input_patch[29] + input_patch[30];
        output_patch[31] = -input_patch[17] + input_patch[19] + input_patch[29] - input_patch[31];
        output_patch[32] = input_patch[16] - input_patch[18] - input_patch[20] + input_patch[22] - input_patch[28] + input_patch[30] + input_patch[32] - input_patch[34];
        output_patch[33] = input_patch[17] + input_patch[18] - input_patch[21] - input_patch[22] - input_patch[29] - input_patch[30] + input_patch[33] + input_patch[34];
        output_patch[34] = -input_patch[17] + input_patch[18] + input_patch[21] - input_patch[22] + input_patch[29] - input_patch[30] - input_patch[33] + input_patch[34];
        output_patch[35] = input_patch[17] - input_patch[19] - input_patch[21] + input_patch[23] - input_patch[29] + input_patch[31] + input_patch[33] - input_patch[35];
        output_patch[36] = input_patch[12] - input_patch[14] - input_patch[16] + input_patch[18] - input_patch[36] + input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[37] = input_patch[13] + input_patch[14] - input_patch[17] - input_patch[18] - input_patch[37] - input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[38] = -input_patch[13] + input_patch[14] + input_patch[17] - input_patch[18] + input_patch[37] - input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[39] = input_patch[13] - input_patch[15] - input_patch[17] + input_patch[19] - input_patch[37] + input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[40] = input_patch[16] - input_patch[18] - input_patch[40] + input_patch[42];
        output_patch[41] = input_patch[17] + input_patch[18] - input_patch[41] - input_patch[42];
        output_patch[42] = -input_patch[17] + input_patch[18] + input_patch[41] - input_patch[42];
        output_patch[43] = input_patch[17] - input_patch[19] - input_patch[41] + input_patch[43];
        output_patch[44] = -input_patch[16] + input_patch[18] + input_patch[20] - input_patch[22] + input_patch[40] - input_patch[42] - input_patch[44] + input_patch[46];
        output_patch[45] = -input_patch[17] - input_patch[18] + input_patch[21] + input_patch[22] + input_patch[41] + input_patch[42] - input_patch[45] - input_patch[46];
        output_patch[46] = input_patch[17] - input_patch[18] - input_patch[21] + input_patch[22] - input_patch[41] + input_patch[42] + input_patch[45] - input_patch[46];
        output_patch[47] = -input_patch[17] + input_patch[19] + input_patch[21] - input_patch[23] + input_patch[41] - input_patch[43] - input_patch[45] + input_patch[47];
    } else if(D == 3 && H == 3 && W == 1) {
        output_patch[0] = input_patch[0] - input_patch[16] + input_patch[20] - input_patch[4];
        output_patch[1] = -input_patch[17] + input_patch[1] + input_patch[21] - input_patch[5];
        output_patch[2] = -input_patch[18] - input_patch[20] + input_patch[2] + input_patch[4];
        output_patch[3] = -input_patch[19] - input_patch[21] + input_patch[3] + input_patch[5];
        output_patch[4] = input_patch[18] - input_patch[20] - input_patch[2] + input_patch[4];
        output_patch[5] = input_patch[19] - input_patch[21] - input_patch[3] + input_patch[5];
        output_patch[6] = -input_patch[18] + input_patch[22] + input_patch[2] - input_patch[6];
        output_patch[7] = -input_patch[19] + input_patch[23] + input_patch[3] - input_patch[7];
        output_patch[8] = -input_patch[12] + input_patch[16] - input_patch[20] + input_patch[8];
        output_patch[9] = -input_patch[13] + input_patch[17] - input_patch[21] + input_patch[9];
        output_patch[10] = input_patch[10] + input_patch[12] + input_patch[18] + input_patch[20];
        output_patch[11] = input_patch[11] + input_patch[13] + input_patch[19] + input_patch[21];
        output_patch[12] = -input_patch[10] + input_patch[12] - input_patch[18] + input_patch[20];
        output_patch[13] = -input_patch[11] + input_patch[13] - input_patch[19] + input_patch[21];
        output_patch[14] = input_patch[10] - input_patch[14] + input_patch[18] - input_patch[22];
        output_patch[15] = input_patch[11] - input_patch[15] + input_patch[19] - input_patch[23];
        output_patch[16] = input_patch[12] + input_patch[16] - input_patch[20] - input_patch[8];
        output_patch[17] = input_patch[13] + input_patch[17] - input_patch[21] - input_patch[9];
        output_patch[18] = -input_patch[10] - input_patch[12] + input_patch[18] + input_patch[20];
        output_patch[19] = -input_patch[11] - input_patch[13] + input_patch[19] + input_patch[21];
        output_patch[20] = input_patch[10] - input_patch[12] - input_patch[18] + input_patch[20];
        output_patch[21] = input_patch[11] - input_patch[13] - input_patch[19] + input_patch[21];
        output_patch[22] = -input_patch[10] + input_patch[14] + input_patch[18] - input_patch[22];
        output_patch[23] = -input_patch[11] + input_patch[15] + input_patch[19] - input_patch[23];
        output_patch[24] = -input_patch[12] - input_patch[24] + input_patch[28] + input_patch[8];
        output_patch[25] = -input_patch[13] - input_patch[25] + input_patch[29] + input_patch[9];
        output_patch[26] = input_patch[10] + input_patch[12] - input_patch[26] - input_patch[28];
        output_patch[27] = input_patch[11] + input_patch[13] - input_patch[27] - input_patch[29];
        output_patch[28] = -input_patch[10] + input_patch[12] + input_patch[26] - input_patch[28];
        output_patch[29] = -input_patch[11] + input_patch[13] + input_patch[27] - input_patch[29];
        output_patch[30] = input_patch[10] - input_patch[14] - input_patch[26] + input_patch[30];
        output_patch[31] = input_patch[11] - input_patch[15] - input_patch[27] + input_patch[31];
    } else if(D == 3 && H == 3 && W == 2) {
        output_patch[0] = input_patch[0] - input_patch[1] - input_patch[24] + input_patch[25] + input_patch[30] - input_patch[31] - input_patch[6] + input_patch[7];
        output_patch[1] = input_patch[1] - input_patch[25] + input_patch[31] - input_patch[7];
        output_patch[2] = -input_patch[1] + input_patch[25] - input_patch[26] + input_patch[2] - input_patch[31] + input_patch[32] + input_patch[7] - input_patch[8];
        output_patch[3] = -input_patch[27] + input_patch[28] - input_patch[30] + input_patch[31] + input_patch[3] - input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[4] = -input_patch[28] - input_patch[31] + input_patch[4] + input_patch[7];
        output_patch[5] = input_patch[28] - input_patch[29] + input_patch[31] - input_patch[32] - input_patch[4] + input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[6] = input_patch[27] - input_patch[28] - input_patch[30] + input_patch[31] - input_patch[3] + input_patch[4] + input_patch[6] - input_patch[7];
        output_patch[7] = input_patch[28] - input_patch[31] - input_patch[4] + input_patch[7];
        output_patch[8] = -input_patch[28] + input_patch[29] + input_patch[31] - input_patch[32] + input_patch[4] - input_patch[5] - input_patch[7] + input_patch[8];
        output_patch[9] = input_patch[10] - input_patch[27] + input_patch[28] + input_patch[33] - input_patch[34] + input_patch[3] - input_patch[4] - input_patch[9];
        output_patch[10] = -input_patch[10] - input_patch[28] + input_patch[34] + input_patch[4];
        output_patch[11] = input_patch[10] - input_patch[11] + input_patch[28] - input_patch[29] - input_patch[34] + input_patch[35] - input_patch[4] + input_patch[5];
        output_patch[12] = input_patch[12] - input_patch[13] - input_patch[18] + input_patch[19] + input_patch[24] - input_patch[25] - input_patch[30] + input_patch[31];
        output_patch[13] = input_patch[13] - input_patch[19] + input_patch[25] - input_patch[31];
        output_patch[14] = -input_patch[13] + input_patch[14] + input_patch[19] - input_patch[20] - input_patch[25] + input_patch[26] + input_patch[31] - input_patch[32];
        output_patch[15] = input_patch[15] - input_patch[16] + input_patch[18] - input_patch[19] + input_patch[27] - input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[16] = input_patch[16] + input_patch[19] + input_patch[28] + input_patch[31];
        output_patch[17] = -input_patch[16] + input_patch[17] - input_patch[19] + input_patch[20] - input_patch[28] + input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[18] = -input_patch[15] + input_patch[16] + input_patch[18] - input_patch[19] - input_patch[27] + input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[19] = -input_patch[16] + input_patch[19] - input_patch[28] + input_patch[31];
        output_patch[20] = input_patch[16] - input_patch[17] - input_patch[19] + input_patch[20] + input_patch[28] - input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[21] = input_patch[15] - input_patch[16] - input_patch[21] + input_patch[22] + input_patch[27] - input_patch[28] - input_patch[33] + input_patch[34];
        output_patch[22] = input_patch[16] - input_patch[22] + input_patch[28] - input_patch[34];
        output_patch[23] = -input_patch[16] + input_patch[17] + input_patch[22] - input_patch[23] - input_patch[28] + input_patch[29] + input_patch[34] - input_patch[35];
        output_patch[24] = -input_patch[12] + input_patch[13] + input_patch[18] - input_patch[19] + input_patch[24] - input_patch[25] - input_patch[30] + input_patch[31];
        output_patch[25] = -input_patch[13] + input_patch[19] + input_patch[25] - input_patch[31];
        output_patch[26] = input_patch[13] - input_patch[14] - input_patch[19] + input_patch[20] - input_patch[25] + input_patch[26] + input_patch[31] - input_patch[32];
        output_patch[27] = -input_patch[15] + input_patch[16] - input_patch[18] + input_patch[19] + input_patch[27] - input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[28] = -input_patch[16] - input_patch[19] + input_patch[28] + input_patch[31];
        output_patch[29] = input_patch[16] - input_patch[17] + input_patch[19] - input_patch[20] - input_patch[28] + input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[30] = input_patch[15] - input_patch[16] - input_patch[18] + input_patch[19] - input_patch[27] + input_patch[28] + input_patch[30] - input_patch[31];
        output_patch[31] = input_patch[16] - input_patch[19] - input_patch[28] + input_patch[31];
        output_patch[32] = -input_patch[16] + input_patch[17] + input_patch[19] - input_patch[20] + input_patch[28] - input_patch[29] - input_patch[31] + input_patch[32];
        output_patch[33] = -input_patch[15] + input_patch[16] + input_patch[21] - input_patch[22] + input_patch[27] - input_patch[28] - input_patch[33] + input_patch[34];
        output_patch[34] = -input_patch[16] + input_patch[22] + input_patch[28] - input_patch[34];
        output_patch[35] = input_patch[16] - input_patch[17] - input_patch[22] + input_patch[23] - input_patch[28] + input_patch[29] + input_patch[34] - input_patch[35];
        output_patch[36] = input_patch[12] - input_patch[13] - input_patch[18] + input_patch[19] - input_patch[36] + input_patch[37] + input_patch[42] - input_patch[43];
        output_patch[37] = input_patch[13] - input_patch[19] - input_patch[37] + input_patch[43];
        output_patch[38] = -input_patch[13] + input_patch[14] + input_patch[19] - input_patch[20] + input_patch[37] - input_patch[38] - input_patch[43] + input_patch[44];
        output_patch[39] = input_patch[15] - input_patch[16] + input_patch[18] - input_patch[19] - input_patch[39] + input_patch[40] - input_patch[42] + input_patch[43];
        output_patch[40] = input_patch[16] + input_patch[19] - input_patch[40] - input_patch[43];
        output_patch[41] = -input_patch[16] + input_patch[17] - input_patch[19] + input_patch[20] + input_patch[40] - input_patch[41] + input_patch[43] - input_patch[44];
        output_patch[42] = -input_patch[15] + input_patch[16] + input_patch[18] - input_patch[19] + input_patch[39] - input_patch[40] - input_patch[42] + input_patch[43];
        output_patch[43] = -input_patch[16] + input_patch[19] + input_patch[40] - input_patch[43];
        output_patch[44] = input_patch[16] - input_patch[17] - input_patch[19] + input_patch[20] - input_patch[40] + input_patch[41] + input_patch[43] - input_patch[44];
        output_patch[45] = input_patch[15] - input_patch[16] - input_patch[21] + input_patch[22] - input_patch[39] + input_patch[40] + input_patch[45] - input_patch[46];
        output_patch[46] = input_patch[16] - input_patch[22] - input_patch[40] + input_patch[46];
        output_patch[47] = -input_patch[16] + input_patch[17] + input_patch[22] - input_patch[23] + input_patch[40] - input_patch[41] - input_patch[46] + input_patch[47];
    } else if(D == 3 && H == 3 && W == 3) {
        output_patch[0] = input_patch[0] + input_patch[10] - input_patch[2] - input_patch[32] + input_patch[34] + input_patch[40] - input_patch[42] - input_patch[8];
        output_patch[1] = -input_patch[10] + input_patch[1] + input_patch[2] - input_patch[33] - input_patch[34] + input_patch[41] + input_patch[42] - input_patch[9];
        output_patch[2] = -input_patch[10] - input_patch[1] + input_patch[2] + input_patch[33] - input_patch[34] - input_patch[41] + input_patch[42] + input_patch[9];
        output_patch[3] = input_patch[11] + input_patch[1] - input_patch[33] + input_patch[35] - input_patch[3] + input_patch[41] - input_patch[43] - input_patch[9];
        output_patch[4] = -input_patch[10] - input_patch[36] + input_patch[38] - input_patch[40] + input_patch[42] + input_patch[4] - input_patch[6] + input_patch[8];
        output_patch[5] = input_patch[10] - input_patch[37] - input_patch[38] - input_patch[41] - input_patch[42] + input_patch[5] + input_patch[6] + input_patch[9];
        output_patch[6] = input_patch[10] + input_patch[37] - input_patch[38] + input_patch[41] - input_patch[42] - input_patch[5] + input_patch[6] - input_patch[9];
        output_patch[7] = -input_patch[11] - input_patch[37] + input_patch[39] - input_patch[41] + input_patch[43] + input_patch[5] - input_patch[7] + input_patch[9];
        output_patch[8] = -input_patch[10] + input_patch[36] - input_patch[38] - input_patch[40] + input_patch[42] - input_patch[4] + input_patch[6] + input_patch[8];
        output_patch[9] = input_patch[10] + input_patch[37] + input_patch[38] - input_patch[41] - input_patch[42] - input_patch[5] - input_patch[6] + input_patch[9];
        output_patch[10] = input_patch[10] - input_patch[37] + input_patch[38] + input_patch[41] - input_patch[42] + input_patch[5] - input_patch[6] - input_patch[9];
        output_patch[11] = -input_patch[11] + input_patch[37] - input_patch[39] - input_patch[41] + input_patch[43] - input_patch[5] + input_patch[7] + input_patch[9];
        output_patch[12] = -input_patch[12] + input_patch[14] - input_patch[36] + input_patch[38] + input_patch[44] - input_patch[46] + input_patch[4] - input_patch[6];
        output_patch[13] = -input_patch[13] - input_patch[14] - input_patch[37] - input_patch[38] + input_patch[45] + input_patch[46] + input_patch[5] + input_patch[6];
        output_patch[14] = input_patch[13] - input_patch[14] + input_patch[37] - input_patch[38] - input_patch[45] + input_patch[46] - input_patch[5] + input_patch[6];
        output_patch[15] = -input_patch[13] + input_patch[15] - input_patch[37] + input_patch[39] + input_patch[45] - input_patch[47] + input_patch[5] - input_patch[7];
        output_patch[16] = input_patch[16] - input_patch[18] - input_patch[24] + input_patch[26] + input_patch[32] - input_patch[34] - input_patch[40] + input_patch[42];
        output_patch[17] = input_patch[17] + input_patch[18] - input_patch[25] - input_patch[26] + input_patch[33] + input_patch[34] - input_patch[41] - input_patch[42];
        output_patch[18] = -input_patch[17] + input_patch[18] + input_patch[25] - input_patch[26] - input_patch[33] + input_patch[34] + input_patch[41] - input_patch[42];
        output_patch[19] = input_patch[17] - input_patch[19] - input_patch[25] + input_patch[27] + input_patch[33] - input_patch[35] - input_patch[41] + input_patch[43];
        output_patch[20] = input_patch[20] - input_patch[22] + input_patch[24] - input_patch[26] + input_patch[36] - input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[21] = input_patch[21] + input_patch[22] + input_patch[25] + input_patch[26] + input_patch[37] + input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[22] = -input_patch[21] + input_patch[22] - input_patch[25] + input_patch[26] - input_patch[37] + input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[23] = input_patch[21] - input_patch[23] + input_patch[25] - input_patch[27] + input_patch[37] - input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[24] = -input_patch[20] + input_patch[22] + input_patch[24] - input_patch[26] - input_patch[36] + input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[25] = -input_patch[21] - input_patch[22] + input_patch[25] + input_patch[26] - input_patch[37] - input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[26] = input_patch[21] - input_patch[22] - input_patch[25] + input_patch[26] + input_patch[37] - input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[27] = -input_patch[21] + input_patch[23] + input_patch[25] - input_patch[27] - input_patch[37] + input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[28] = input_patch[20] - input_patch[22] - input_patch[28] + input_patch[30] + input_patch[36] - input_patch[38] - input_patch[44] + input_patch[46];
        output_patch[29] = input_patch[21] + input_patch[22] - input_patch[29] - input_patch[30] + input_patch[37] + input_patch[38] - input_patch[45] - input_patch[46];
        output_patch[30] = -input_patch[21] + input_patch[22] + input_patch[29] - input_patch[30] - input_patch[37] + input_patch[38] + input_patch[45] - input_patch[46];
        output_patch[31] = input_patch[21] - input_patch[23] - input_patch[29] + input_patch[31] + input_patch[37] - input_patch[39] - input_patch[45] + input_patch[47];
        output_patch[32] = -input_patch[16] + input_patch[18] + input_patch[24] - input_patch[26] + input_patch[32] - input_patch[34] - input_patch[40] + input_patch[42];
        output_patch[33] = -input_patch[17] - input_patch[18] + input_patch[25] + input_patch[26] + input_patch[33] + input_patch[34] - input_patch[41] - input_patch[42];
        output_patch[34] = input_patch[17] - input_patch[18] - input_patch[25] + input_patch[26] - input_patch[33] + input_patch[34] + input_patch[41] - input_patch[42];
        output_patch[35] = -input_patch[17] + input_patch[19] + input_patch[25] - input_patch[27] + input_patch[33] - input_patch[35] - input_patch[41] + input_patch[43];
        output_patch[36] = -input_patch[20] + input_patch[22] - input_patch[24] + input_patch[26] + input_patch[36] - input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[37] = -input_patch[21] - input_patch[22] - input_patch[25] - input_patch[26] + input_patch[37] + input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[38] = input_patch[21] - input_patch[22] + input_patch[25] - input_patch[26] - input_patch[37] + input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[39] = -input_patch[21] + input_patch[23] - input_patch[25] + input_patch[27] + input_patch[37] - input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[40] = input_patch[20] - input_patch[22] - input_patch[24] + input_patch[26] - input_patch[36] + input_patch[38] + input_patch[40] - input_patch[42];
        output_patch[41] = input_patch[21] + input_patch[22] - input_patch[25] - input_patch[26] - input_patch[37] - input_patch[38] + input_patch[41] + input_patch[42];
        output_patch[42] = -input_patch[21] + input_patch[22] + input_patch[25] - input_patch[26] + input_patch[37] - input_patch[38] - input_patch[41] + input_patch[42];
        output_patch[43] = input_patch[21] - input_patch[23] - input_patch[25] + input_patch[27] - input_patch[37] + input_patch[39] + input_patch[41] - input_patch[43];
        output_patch[44] = -input_patch[20] + input_patch[22] + input_patch[28] - input_patch[30] + input_patch[36] - input_patch[38] - input_patch[44] + input_patch[46];
        output_patch[45] = -input_patch[21] - input_patch[22] + input_patch[29] + input_patch[30] + input_patch[37] + input_patch[38] - input_patch[45] - input_patch[46];
        output_patch[46] = input_patch[21] - input_patch[22] - input_patch[29] + input_patch[30] - input_patch[37] + input_patch[38] + input_patch[45] - input_patch[46];
        output_patch[47] = -input_patch[21] + input_patch[23] + input_patch[29] - input_patch[31] + input_patch[37] - input_patch[39] - input_patch[45] + input_patch[47];
        output_patch[48] = input_patch[16] - input_patch[18] - input_patch[24] + input_patch[26] - input_patch[48] + input_patch[50] + input_patch[56] - input_patch[58];
        output_patch[49] = input_patch[17] + input_patch[18] - input_patch[25] - input_patch[26] - input_patch[49] - input_patch[50] + input_patch[57] + input_patch[58];
        output_patch[50] = -input_patch[17] + input_patch[18] + input_patch[25] - input_patch[26] + input_patch[49] - input_patch[50] - input_patch[57] + input_patch[58];
        output_patch[51] = input_patch[17] - input_patch[19] - input_patch[25] + input_patch[27] - input_patch[49] + input_patch[51] + input_patch[57] - input_patch[59];
        output_patch[52] = input_patch[20] - input_patch[22] + input_patch[24] - input_patch[26] - input_patch[52] + input_patch[54] - input_patch[56] + input_patch[58];
        output_patch[53] = input_patch[21] + input_patch[22] + input_patch[25] + input_patch[26] - input_patch[53] - input_patch[54] - input_patch[57] - input_patch[58];
        output_patch[54] = -input_patch[21] + input_patch[22] - input_patch[25] + input_patch[26] + input_patch[53] - input_patch[54] + input_patch[57] - input_patch[58];
        output_patch[55] = input_patch[21] - input_patch[23] + input_patch[25] - input_patch[27] - input_patch[53] + input_patch[55] - input_patch[57] + input_patch[59];
        output_patch[56] = -input_patch[20] + input_patch[22] + input_patch[24] - input_patch[26] + input_patch[52] - input_patch[54] - input_patch[56] + input_patch[58];
        output_patch[57] = -input_patch[21] - input_patch[22] + input_patch[25] + input_patch[26] + input_patch[53] + input_patch[54] - input_patch[57] - input_patch[58];
        output_patch[58] = input_patch[21] - input_patch[22] - input_patch[25] + input_patch[26] - input_patch[53] + input_patch[54] + input_patch[57] - input_patch[58];
        output_patch[59] = -input_patch[21] + input_patch[23] + input_patch[25] - input_patch[27] + input_patch[53] - input_patch[55] - input_patch[57] + input_patch[59];
        output_patch[60] = input_patch[20] - input_patch[22] - input_patch[28] + input_patch[30] - input_patch[52] + input_patch[54] + input_patch[60] - input_patch[62];
        output_patch[61] = input_patch[21] + input_patch[22] - input_patch[29] - input_patch[30] - input_patch[53] - input_patch[54] + input_patch[61] + input_patch[62];
        output_patch[62] = -input_patch[21] + input_patch[22] + input_patch[29] - input_patch[30] + input_patch[53] - input_patch[54] - input_patch[61] + input_patch[62];
        output_patch[63] = input_patch[21] - input_patch[23] - input_patch[29] + input_patch[31] - input_patch[53] + input_patch[55] + input_patch[61] - input_patch[63];
    }
}

template <typename T>
__device__ __forceinline__ void outputWino2NormCalculation(const T *input_patch, T *output_patch, int D, int H, int W) {
    if(D == 1 && H == 1 && W == 1) {
    output_patch[0] = input_patch[0];
    output_patch[1] = input_patch[1];
    output_patch[2] = input_patch[2];
    output_patch[3] = input_patch[3];
    output_patch[4] = input_patch[4];
    output_patch[5] = input_patch[5];
    output_patch[6] = input_patch[6];
    output_patch[7] = input_patch[7];
    } else if(D == 1 && H == 1 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[1];
    output_patch[1] = input_patch[1] + input_patch[2];
    output_patch[2] = input_patch[3] + input_patch[4];
    output_patch[3] = input_patch[4] + input_patch[5];
    output_patch[4] = input_patch[6] + input_patch[7];
    output_patch[5] = input_patch[7] + input_patch[8];
    output_patch[6] = input_patch[10] + input_patch[9];
    output_patch[7] = input_patch[10] + input_patch[11];
    } else if(D == 1 && H == 1 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[1] + input_patch[2];
    output_patch[1] = input_patch[1] - input_patch[2] - input_patch[3];
    output_patch[2] = input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[3] = input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[4] = input_patch[10] + input_patch[8] + input_patch[9];
    output_patch[5] = -input_patch[10] - input_patch[11] + input_patch[9];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[14];
    output_patch[7] = input_patch[13] - input_patch[14] - input_patch[15];
    } else if(D == 1 && H == 2 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[2];
    output_patch[1] = input_patch[1] + input_patch[3];
    output_patch[2] = input_patch[2] + input_patch[4];
    output_patch[3] = input_patch[3] + input_patch[5];
    output_patch[4] = input_patch[6] + input_patch[8];
    output_patch[5] = input_patch[7] + input_patch[9];
    output_patch[6] = input_patch[10] + input_patch[8];
    output_patch[7] = input_patch[11] + input_patch[9];
    } else if(D == 1 && H == 2 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[1] + input_patch[3] + input_patch[4];
    output_patch[1] = input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5];
    output_patch[2] = input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[3] = input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[4] = input_patch[10] + input_patch[12] + input_patch[13] + input_patch[9];
    output_patch[5] = input_patch[10] + input_patch[11] + input_patch[13] + input_patch[14];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16];
    output_patch[7] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17];
    } else if(D == 1 && H == 2 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[1] = input_patch[1] - input_patch[2] - input_patch[3] + input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[2] = input_patch[10] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[18];
    output_patch[5] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[17] - input_patch[18] - input_patch[19];
    output_patch[6] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22];
    output_patch[7] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23];
    } else if(D == 1 && H == 3 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[2] + input_patch[4];
    output_patch[1] = input_patch[1] + input_patch[3] + input_patch[5];
    output_patch[2] = input_patch[2] - input_patch[4] - input_patch[6];
    output_patch[3] = input_patch[3] - input_patch[5] - input_patch[7];
    output_patch[4] = input_patch[10] + input_patch[12] + input_patch[8];
    output_patch[5] = input_patch[11] + input_patch[13] + input_patch[9];
    output_patch[6] = input_patch[10] - input_patch[12] - input_patch[14];
    output_patch[7] = input_patch[11] - input_patch[13] - input_patch[15];
    } else if(D == 1 && H == 3 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[1] + input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[1] = input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[2] = -input_patch[10] + input_patch[3] + input_patch[4] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[4] + input_patch[5] - input_patch[7] - input_patch[8];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[18] + input_patch[19];
    output_patch[5] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[19] + input_patch[20];
    output_patch[6] = input_patch[15] + input_patch[16] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22];
    output_patch[7] = input_patch[16] + input_patch[17] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23];
    } else if(D == 1 && H == 3 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[1] = -input_patch[10] - input_patch[11] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[2] = -input_patch[10] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[4] + input_patch[5] + input_patch[6] - input_patch[8] - input_patch[9];
    output_patch[3] = input_patch[10] + input_patch[11] - input_patch[13] + input_patch[14] + input_patch[15] + input_patch[5] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[4] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[26];
    output_patch[5] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[25] - input_patch[26] - input_patch[27];
    output_patch[6] = input_patch[20] + input_patch[21] + input_patch[22] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30];
    output_patch[7] = input_patch[21] - input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31];
    } else if(D == 2 && H == 1 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[4];
    output_patch[1] = input_patch[1] + input_patch[5];
    output_patch[2] = input_patch[2] + input_patch[6];
    output_patch[3] = input_patch[3] + input_patch[7];
    output_patch[4] = input_patch[4] + input_patch[8];
    output_patch[5] = input_patch[5] + input_patch[9];
    output_patch[6] = input_patch[10] + input_patch[6];
    output_patch[7] = input_patch[11] + input_patch[7];
    } else if(D == 2 && H == 1 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[1] + input_patch[6] + input_patch[7];
    output_patch[1] = input_patch[1] + input_patch[2] + input_patch[7] + input_patch[8];
    output_patch[2] = input_patch[10] + input_patch[3] + input_patch[4] + input_patch[9];
    output_patch[3] = input_patch[10] + input_patch[11] + input_patch[4] + input_patch[5];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[6] + input_patch[7];
    output_patch[5] = input_patch[13] + input_patch[14] + input_patch[7] + input_patch[8];
    output_patch[6] = input_patch[10] + input_patch[15] + input_patch[16] + input_patch[9];
    output_patch[7] = input_patch[10] + input_patch[11] + input_patch[16] + input_patch[17];
    } else if(D == 2 && H == 1 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[1] + input_patch[2] + input_patch[8] + input_patch[9];
    output_patch[1] = -input_patch[10] - input_patch[11] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[9];
    output_patch[2] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[3] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[4] = input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[8] + input_patch[9];
    output_patch[5] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[9];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[20] + input_patch[21] + input_patch[22];
    output_patch[7] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[21] - input_patch[22] - input_patch[23];
    } else if(D == 2 && H == 2 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[2] + input_patch[6] + input_patch[8];
    output_patch[1] = input_patch[1] + input_patch[3] + input_patch[7] + input_patch[9];
    output_patch[2] = input_patch[10] + input_patch[2] + input_patch[4] + input_patch[8];
    output_patch[3] = input_patch[11] + input_patch[3] + input_patch[5] + input_patch[9];
    output_patch[4] = input_patch[12] + input_patch[14] + input_patch[6] + input_patch[8];
    output_patch[5] = input_patch[13] + input_patch[15] + input_patch[7] + input_patch[9];
    output_patch[6] = input_patch[10] + input_patch[14] + input_patch[16] + input_patch[8];
    output_patch[7] = input_patch[11] + input_patch[15] + input_patch[17] + input_patch[9];
    } else if(D == 2 && H == 2 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[12] + input_patch[13] + input_patch[1] + input_patch[3] + input_patch[4] + input_patch[9];
    output_patch[1] = input_patch[10] + input_patch[11] + input_patch[13] + input_patch[14] + input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5];
    output_patch[2] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[3] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[4] = input_patch[10] + input_patch[12] + input_patch[13] + input_patch[18] + input_patch[19] + input_patch[21] + input_patch[22] + input_patch[9];
    output_patch[5] = input_patch[10] + input_patch[11] + input_patch[13] + input_patch[14] + input_patch[19] + input_patch[20] + input_patch[22] + input_patch[23];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25];
    output_patch[7] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[22] + input_patch[23] + input_patch[25] + input_patch[26];
    } else if(D == 2 && H == 2 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[1] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[2] = input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[28] + input_patch[29] + input_patch[30];
    output_patch[5] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[25] - input_patch[26] - input_patch[27] + input_patch[29] - input_patch[30] - input_patch[31];
    output_patch[6] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[28] + input_patch[29] + input_patch[30] + input_patch[32] + input_patch[33] + input_patch[34];
    output_patch[7] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[29] - input_patch[30] - input_patch[31] + input_patch[33] - input_patch[34] - input_patch[35];
    } else if(D == 2 && H == 3 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[12] + input_patch[2] + input_patch[4] + input_patch[8];
    output_patch[1] = input_patch[11] + input_patch[13] + input_patch[1] + input_patch[3] + input_patch[5] + input_patch[9];
    output_patch[2] = input_patch[10] - input_patch[12] - input_patch[14] + input_patch[2] - input_patch[4] - input_patch[6];
    output_patch[3] = input_patch[11] - input_patch[13] - input_patch[15] + input_patch[3] - input_patch[5] - input_patch[7];
    output_patch[4] = input_patch[10] + input_patch[12] + input_patch[16] + input_patch[18] + input_patch[20] + input_patch[8];
    output_patch[5] = input_patch[11] + input_patch[13] + input_patch[17] + input_patch[19] + input_patch[21] + input_patch[9];
    output_patch[6] = input_patch[10] - input_patch[12] - input_patch[14] + input_patch[18] - input_patch[20] - input_patch[22];
    output_patch[7] = input_patch[11] - input_patch[13] - input_patch[15] + input_patch[19] - input_patch[21] - input_patch[23];
    } else if(D == 2 && H == 3 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[1] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[2] = -input_patch[10] + input_patch[15] + input_patch[16] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22] + input_patch[3] + input_patch[4] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[16] + input_patch[17] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23] + input_patch[4] + input_patch[5] - input_patch[7] - input_patch[8];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[18] + input_patch[19] + input_patch[24] + input_patch[25] + input_patch[27] + input_patch[28] + input_patch[30] + input_patch[31];
    output_patch[5] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[19] + input_patch[20] + input_patch[25] + input_patch[26] + input_patch[28] + input_patch[29] + input_patch[31] + input_patch[32];
    output_patch[6] = input_patch[15] + input_patch[16] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22] + input_patch[27] + input_patch[28] - input_patch[30] - input_patch[31] - input_patch[33] - input_patch[34];
    output_patch[7] = input_patch[16] + input_patch[17] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23] + input_patch[28] + input_patch[29] - input_patch[31] - input_patch[32] - input_patch[34] - input_patch[35];
    } else if(D == 2 && H == 3 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[1] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[1] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[25] - input_patch[26] - input_patch[27] - input_patch[2] - input_patch[3] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[2] = -input_patch[10] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[20] + input_patch[21] + input_patch[22] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30] + input_patch[4] + input_patch[5] + input_patch[6] - input_patch[8] - input_patch[9];
    output_patch[3] = input_patch[10] + input_patch[11] - input_patch[13] + input_patch[14] + input_patch[15] + input_patch[21] - input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31] + input_patch[5] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[4] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[32] + input_patch[33] + input_patch[34] + input_patch[36] + input_patch[37] + input_patch[38] + input_patch[40] + input_patch[41] + input_patch[42];
    output_patch[5] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[25] - input_patch[26] - input_patch[27] + input_patch[33] - input_patch[34] - input_patch[35] + input_patch[37] - input_patch[38] - input_patch[39] + input_patch[41] - input_patch[42] - input_patch[43];
    output_patch[6] = input_patch[20] + input_patch[21] + input_patch[22] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30] + input_patch[36] + input_patch[37] + input_patch[38] - input_patch[40] - input_patch[41] - input_patch[42] - input_patch[44] - input_patch[45] - input_patch[46];
    output_patch[7] = input_patch[21] - input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31] + input_patch[37] - input_patch[38] - input_patch[39] - input_patch[41] + input_patch[42] + input_patch[43] - input_patch[45] + input_patch[46] + input_patch[47];
    } else if(D == 3 && H == 1 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[4] + input_patch[8];
    output_patch[1] = input_patch[1] + input_patch[5] + input_patch[9];
    output_patch[2] = input_patch[10] + input_patch[2] + input_patch[6];
    output_patch[3] = input_patch[11] + input_patch[3] + input_patch[7];
    output_patch[4] = -input_patch[12] + input_patch[4] - input_patch[8];
    output_patch[5] = -input_patch[13] + input_patch[5] - input_patch[9];
    output_patch[6] = -input_patch[10] - input_patch[14] + input_patch[6];
    output_patch[7] = -input_patch[11] - input_patch[15] + input_patch[7];
    } else if(D == 3 && H == 1 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[13] + input_patch[1] + input_patch[6] + input_patch[7];
    output_patch[1] = input_patch[13] + input_patch[14] + input_patch[1] + input_patch[2] + input_patch[7] + input_patch[8];
    output_patch[2] = input_patch[10] + input_patch[15] + input_patch[16] + input_patch[3] + input_patch[4] + input_patch[9];
    output_patch[3] = input_patch[10] + input_patch[11] + input_patch[16] + input_patch[17] + input_patch[4] + input_patch[5];
    output_patch[4] = -input_patch[12] - input_patch[13] - input_patch[18] - input_patch[19] + input_patch[6] + input_patch[7];
    output_patch[5] = -input_patch[13] - input_patch[14] - input_patch[19] - input_patch[20] + input_patch[7] + input_patch[8];
    output_patch[6] = input_patch[10] - input_patch[15] - input_patch[16] - input_patch[21] - input_patch[22] + input_patch[9];
    output_patch[7] = input_patch[10] + input_patch[11] - input_patch[16] - input_patch[17] - input_patch[22] - input_patch[23];
    } else if(D == 3 && H == 1 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[2] + input_patch[8] + input_patch[9];
    output_patch[1] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[1] - input_patch[2] - input_patch[3] + input_patch[9];
    output_patch[2] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[3] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[4] = input_patch[10] - input_patch[16] - input_patch[17] - input_patch[18] - input_patch[24] - input_patch[25] - input_patch[26] + input_patch[8] + input_patch[9];
    output_patch[5] = -input_patch[10] - input_patch[11] - input_patch[17] + input_patch[18] + input_patch[19] - input_patch[25] + input_patch[26] + input_patch[27] + input_patch[9];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[14] - input_patch[20] - input_patch[21] - input_patch[22] - input_patch[28] - input_patch[29] - input_patch[30];
    output_patch[7] = input_patch[13] - input_patch[14] - input_patch[15] - input_patch[21] + input_patch[22] + input_patch[23] - input_patch[29] + input_patch[30] + input_patch[31];
    } else if(D == 3 && H == 2 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[14] + input_patch[2] + input_patch[6] + input_patch[8];
    output_patch[1] = input_patch[13] + input_patch[15] + input_patch[1] + input_patch[3] + input_patch[7] + input_patch[9];
    output_patch[2] = input_patch[10] + input_patch[14] + input_patch[16] + input_patch[2] + input_patch[4] + input_patch[8];
    output_patch[3] = input_patch[11] + input_patch[15] + input_patch[17] + input_patch[3] + input_patch[5] + input_patch[9];
    output_patch[4] = -input_patch[12] - input_patch[14] - input_patch[18] - input_patch[20] + input_patch[6] + input_patch[8];
    output_patch[5] = -input_patch[13] - input_patch[15] - input_patch[19] - input_patch[21] + input_patch[7] + input_patch[9];
    output_patch[6] = input_patch[10] - input_patch[14] - input_patch[16] - input_patch[20] - input_patch[22] + input_patch[8];
    output_patch[7] = input_patch[11] - input_patch[15] - input_patch[17] - input_patch[21] - input_patch[23] + input_patch[9];
    } else if(D == 3 && H == 2 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[12] + input_patch[13] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[21] + input_patch[22] + input_patch[3] + input_patch[4] + input_patch[9];
    output_patch[1] = input_patch[10] + input_patch[11] + input_patch[13] + input_patch[14] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[22] + input_patch[23] + input_patch[2] + input_patch[4] + input_patch[5];
    output_patch[2] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[3] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[22] + input_patch[23] + input_patch[25] + input_patch[26] + input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[4] = input_patch[10] + input_patch[12] + input_patch[13] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22] - input_patch[27] - input_patch[28] - input_patch[30] - input_patch[31] + input_patch[9];
    output_patch[5] = input_patch[10] + input_patch[11] + input_patch[13] + input_patch[14] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23] - input_patch[28] - input_patch[29] - input_patch[31] - input_patch[32];
    output_patch[6] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] - input_patch[21] - input_patch[22] - input_patch[24] - input_patch[25] - input_patch[30] - input_patch[31] - input_patch[33] - input_patch[34];
    output_patch[7] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] - input_patch[22] - input_patch[23] - input_patch[25] - input_patch[26] - input_patch[31] - input_patch[32] - input_patch[34] - input_patch[35];
    } else if(D == 3 && H == 2 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[28] + input_patch[29] + input_patch[2] + input_patch[30] + input_patch[4] + input_patch[5] + input_patch[6];
    output_patch[1] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[1] + input_patch[25] - input_patch[26] - input_patch[27] + input_patch[29] - input_patch[2] - input_patch[30] - input_patch[31] - input_patch[3] + input_patch[5] - input_patch[6] - input_patch[7];
    output_patch[2] = input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[28] + input_patch[29] + input_patch[30] + input_patch[32] + input_patch[33] + input_patch[34] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[29] - input_patch[30] - input_patch[31] + input_patch[33] - input_patch[34] - input_patch[35] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[18] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30] - input_patch[36] - input_patch[37] - input_patch[38] - input_patch[40] - input_patch[41] - input_patch[42];
    output_patch[5] = input_patch[13] - input_patch[14] - input_patch[15] + input_patch[17] - input_patch[18] - input_patch[19] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31] - input_patch[37] + input_patch[38] + input_patch[39] - input_patch[41] + input_patch[42] + input_patch[43];
    output_patch[6] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] - input_patch[28] - input_patch[29] - input_patch[30] - input_patch[32] - input_patch[33] - input_patch[34] - input_patch[40] - input_patch[41] - input_patch[42] - input_patch[44] - input_patch[45] - input_patch[46];
    output_patch[7] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] - input_patch[29] + input_patch[30] + input_patch[31] - input_patch[33] + input_patch[34] + input_patch[35] - input_patch[41] + input_patch[42] + input_patch[43] - input_patch[45] + input_patch[46] + input_patch[47];
    } else if(D == 3 && H == 3 && W == 1) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[12] + input_patch[16] + input_patch[18] + input_patch[20] + input_patch[2] + input_patch[4] + input_patch[8];
    output_patch[1] = input_patch[11] + input_patch[13] + input_patch[17] + input_patch[19] + input_patch[1] + input_patch[21] + input_patch[3] + input_patch[5] + input_patch[9];
    output_patch[2] = input_patch[10] - input_patch[12] - input_patch[14] + input_patch[18] - input_patch[20] - input_patch[22] + input_patch[2] - input_patch[4] - input_patch[6];
    output_patch[3] = input_patch[11] - input_patch[13] - input_patch[15] + input_patch[19] - input_patch[21] - input_patch[23] + input_patch[3] - input_patch[5] - input_patch[7];
    output_patch[4] = input_patch[10] + input_patch[12] - input_patch[16] - input_patch[18] - input_patch[20] - input_patch[24] - input_patch[26] - input_patch[28] + input_patch[8];
    output_patch[5] = input_patch[11] + input_patch[13] - input_patch[17] - input_patch[19] - input_patch[21] - input_patch[25] - input_patch[27] - input_patch[29] + input_patch[9];
    output_patch[6] = input_patch[10] - input_patch[12] - input_patch[14] - input_patch[18] + input_patch[20] + input_patch[22] - input_patch[26] + input_patch[28] + input_patch[30];
    output_patch[7] = input_patch[11] - input_patch[13] - input_patch[15] - input_patch[19] + input_patch[21] + input_patch[23] - input_patch[27] + input_patch[29] + input_patch[31];
    } else if(D == 3 && H == 3 && W == 2) {
    output_patch[0] = input_patch[0] + input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[18] + input_patch[19] + input_patch[1] + input_patch[24] + input_patch[25] + input_patch[27] + input_patch[28] + input_patch[30] + input_patch[31] + input_patch[3] + input_patch[4] + input_patch[6] + input_patch[7];
    output_patch[1] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[19] + input_patch[1] + input_patch[20] + input_patch[25] + input_patch[26] + input_patch[28] + input_patch[29] + input_patch[2] + input_patch[31] + input_patch[32] + input_patch[4] + input_patch[5] + input_patch[7] + input_patch[8];
    output_patch[2] = -input_patch[10] + input_patch[15] + input_patch[16] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22] + input_patch[27] + input_patch[28] - input_patch[30] - input_patch[31] - input_patch[33] - input_patch[34] + input_patch[3] + input_patch[4] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[3] = -input_patch[10] - input_patch[11] + input_patch[16] + input_patch[17] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23] + input_patch[28] + input_patch[29] - input_patch[31] - input_patch[32] - input_patch[34] - input_patch[35] + input_patch[4] + input_patch[5] - input_patch[7] - input_patch[8];
    output_patch[4] = input_patch[12] + input_patch[13] + input_patch[15] + input_patch[16] + input_patch[18] + input_patch[19] - input_patch[24] - input_patch[25] - input_patch[27] - input_patch[28] - input_patch[30] - input_patch[31] - input_patch[36] - input_patch[37] - input_patch[39] - input_patch[40] - input_patch[42] - input_patch[43];
    output_patch[5] = input_patch[13] + input_patch[14] + input_patch[16] + input_patch[17] + input_patch[19] + input_patch[20] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[31] - input_patch[32] - input_patch[37] - input_patch[38] - input_patch[40] - input_patch[41] - input_patch[43] - input_patch[44];
    output_patch[6] = input_patch[15] + input_patch[16] - input_patch[18] - input_patch[19] - input_patch[21] - input_patch[22] - input_patch[27] - input_patch[28] + input_patch[30] + input_patch[31] + input_patch[33] + input_patch[34] - input_patch[39] - input_patch[40] + input_patch[42] + input_patch[43] + input_patch[45] + input_patch[46];
    output_patch[7] = input_patch[16] + input_patch[17] - input_patch[19] - input_patch[20] - input_patch[22] - input_patch[23] - input_patch[28] - input_patch[29] + input_patch[31] + input_patch[32] + input_patch[34] + input_patch[35] - input_patch[40] - input_patch[41] + input_patch[43] + input_patch[44] + input_patch[46] + input_patch[47];
    } else if(D == 3 && H == 3 && W == 3) {
    output_patch[0] = input_patch[0] + input_patch[10] + input_patch[16] + input_patch[17] + input_patch[18] + input_patch[1] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[26] + input_patch[2] + input_patch[32] + input_patch[33] + input_patch[34] + input_patch[36] + input_patch[37] + input_patch[38] + input_patch[40] + input_patch[41] + input_patch[42] + input_patch[4] + input_patch[5] + input_patch[6] + input_patch[8] + input_patch[9];
    output_patch[1] = -input_patch[10] - input_patch[11] + input_patch[17] - input_patch[18] - input_patch[19] + input_patch[1] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[25] - input_patch[26] - input_patch[27] - input_patch[2] + input_patch[33] - input_patch[34] - input_patch[35] + input_patch[37] - input_patch[38] - input_patch[39] - input_patch[3] + input_patch[41] - input_patch[42] - input_patch[43] + input_patch[5] - input_patch[6] - input_patch[7] + input_patch[9];
    output_patch[2] = -input_patch[10] - input_patch[12] - input_patch[13] - input_patch[14] + input_patch[20] + input_patch[21] + input_patch[22] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30] + input_patch[36] + input_patch[37] + input_patch[38] - input_patch[40] - input_patch[41] - input_patch[42] - input_patch[44] - input_patch[45] - input_patch[46] + input_patch[4] + input_patch[5] + input_patch[6] - input_patch[8] - input_patch[9];
    output_patch[3] = input_patch[10] + input_patch[11] - input_patch[13] + input_patch[14] + input_patch[15] + input_patch[21] - input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31] + input_patch[37] - input_patch[38] - input_patch[39] - input_patch[41] + input_patch[42] + input_patch[43] - input_patch[45] + input_patch[46] + input_patch[47] + input_patch[5] - input_patch[6] - input_patch[7] - input_patch[9];
    output_patch[4] = input_patch[16] + input_patch[17] + input_patch[18] + input_patch[20] + input_patch[21] + input_patch[22] + input_patch[24] + input_patch[25] + input_patch[26] - input_patch[32] - input_patch[33] - input_patch[34] - input_patch[36] - input_patch[37] - input_patch[38] - input_patch[40] - input_patch[41] - input_patch[42] - input_patch[48] - input_patch[49] - input_patch[50] - input_patch[52] - input_patch[53] - input_patch[54] - input_patch[56] - input_patch[57] - input_patch[58];
    output_patch[5] = input_patch[17] - input_patch[18] - input_patch[19] + input_patch[21] - input_patch[22] - input_patch[23] + input_patch[25] - input_patch[26] - input_patch[27] - input_patch[33] + input_patch[34] + input_patch[35] - input_patch[37] + input_patch[38] + input_patch[39] - input_patch[41] + input_patch[42] + input_patch[43] - input_patch[49] + input_patch[50] + input_patch[51] - input_patch[53] + input_patch[54] + input_patch[55] - input_patch[57] + input_patch[58] + input_patch[59];
    output_patch[6] = input_patch[20] + input_patch[21] + input_patch[22] - input_patch[24] - input_patch[25] - input_patch[26] - input_patch[28] - input_patch[29] - input_patch[30] - input_patch[36] - input_patch[37] - input_patch[38] + input_patch[40] + input_patch[41] + input_patch[42] + input_patch[44] + input_patch[45] + input_patch[46] - input_patch[52] - input_patch[53] - input_patch[54] + input_patch[56] + input_patch[57] + input_patch[58] + input_patch[60] + input_patch[61] + input_patch[62];
    output_patch[7] = input_patch[21] - input_patch[22] - input_patch[23] - input_patch[25] + input_patch[26] + input_patch[27] - input_patch[29] + input_patch[30] + input_patch[31] - input_patch[37] + input_patch[38] + input_patch[39] + input_patch[41] - input_patch[42] - input_patch[43] + input_patch[45] - input_patch[46] - input_patch[47] - input_patch[53] + input_patch[54] + input_patch[55] + input_patch[57] - input_patch[58] - input_patch[59] + input_patch[61] - input_patch[62] - input_patch[63];
    }
}

